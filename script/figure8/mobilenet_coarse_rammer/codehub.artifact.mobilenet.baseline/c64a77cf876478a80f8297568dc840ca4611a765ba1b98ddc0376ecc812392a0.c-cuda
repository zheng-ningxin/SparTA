// GLOBALS: input0:float32[32, 3, 224, 224], input1:float32[32, 3, 3, 3] -> output0:float32[32, 32, 112, 112]
// BACKEND: c-cuda (default)
// CONFIG: {"Toutput0:D0": [-1, 2, 1, 1], "Toutput0:D1": [-1, 1, 16, 2], "Toutput0:D2": [-1, 1, 1, 4], "Toutput0:D3": [-1, 1, 4, 2], "Toutput0:R0": [-1, 1, 3], "Toutput0:R1": [-1, 1, 1], "Toutput0:R2": [-1, 1, 3], "Toutput0:RA": 1, "Toutput0:S": 3, "Toutput0:U": 1}
// COMPUTE_V1: - einstein_v2(" output0[N, F, HO, WO] +=! input0[N, C, -1 + KH + HO * 2, -1 + KW + WO * 2].when([-1 + KH + HO * 2 >= 0, -1 + KH + HO * 2 < 224, -1 + KW + WO * 2 >= 0, -1 + KW + WO * 2 < 224], const(0.0).cast(input0[N, C, -1 + KH + HO * 2, -1 + KW + WO * 2].dtype())) * input1[F, C, KH, KW] where HO in 112, WO in 112; ", input_dict={ "input0" : { "dtype" : "float32", "shape" : [32, 3, 224, 224]} ,  "input1" : { "dtype" : "float32", "shape" : [32, 3, 3, 3]} })


// ---------------------------------------------------------------------------
// LOCAL: template_op_kernel0 -- input0:float32[32, 3, 224, 224], input1:float32[32, 3, 3, 3] -> output0:float32[32, 32, 112, 112]

#include <cuda_runtime.h>
#include <cuda_fp16.h>
#include <mma.h>

#ifndef __CUDA_COMMON_MACRO__
#define __CUDA_COMMON_MACRO__

#define __ITEM_0_OF__(v) (v).x
#define __ITEM_1_OF__(v) (v).y
#define __ITEM_2_OF__(v) (v).z
#define __ITEM_3_OF__(v) (v).w

#define __STORE_ITEM_0__(t, out, ido, in, idi) *(t*)(out + ido) = *(t*)(in + idi)
#define __STORE_ITEM_1__(t, out, ido, in, idi)
#define __STORE_ITEM_2__(t, out, ido, in, idi)
#define __STORE_ITEM_3__(t, out, ido, in, idi)

#define MAKE_VEC4_OP(type) \
  __forceinline__ __device__ type operator+(const type &l, const type &r) { return make_##type(l.x + r.x, l.y + r.y, l.z + r.z, l.w + r.w); } \
  __forceinline__ __device__ type operator-(const type &l, const type &r) { return make_##type(l.x - r.x, l.y - r.y, l.z - r.z, l.w - r.w); } \
  __forceinline__ __device__ type operator*(const type &l, const type &r) { return make_##type(l.x * r.x, l.y * r.y, l.z * r.z, l.w * r.w); } \
  __forceinline__ __device__ type operator/(const type &l, const type &r) { return make_##type(l.x / r.x, l.y / r.y, l.z / r.z, l.w / r.w); } \
  __forceinline__ __device__ type operator%(const type &l, const type &r) { return make_##type(l.x % r.x, l.y % r.y, l.z % r.z, l.w % r.w); }
#define MAKE_VEC2_OP(type) \
  __forceinline__ __device__ type operator+(const type &l, const type &r) { return make_##type(l.x + r.x, l.y + r.y); } \
  __forceinline__ __device__ type operator-(const type &l, const type &r) { return make_##type(l.x - r.x, l.y - r.y); } \
  __forceinline__ __device__ type operator*(const type &l, const type &r) { return make_##type(l.x * r.x, l.y * r.y); } \
  __forceinline__ __device__ type operator/(const type &l, const type &r) { return make_##type(l.x / r.x, l.y / r.y); } \
  __forceinline__ __device__ type operator%(const type &l, const type &r) { return make_##type(l.x % r.x, l.y % r.y); }

MAKE_VEC4_OP(int4)
MAKE_VEC2_OP(int2)

#endif


extern "C" __global__ __launch_bounds__(64) void template_op_kernel0(float* __restrict__ input0, float* __restrict__ input1, float* __restrict__ output0) {
  // [thread_extent] blockIdx.x = 6272
  // [thread_extent] threadIdx.x = 64
  float output0_local[32];
  output0_local[(0)] = 0.000000e+00f;
  output0_local[(16)] = 0.000000e+00f;
  output0_local[(1)] = 0.000000e+00f;
  output0_local[(17)] = 0.000000e+00f;
  output0_local[(2)] = 0.000000e+00f;
  output0_local[(18)] = 0.000000e+00f;
  output0_local[(3)] = 0.000000e+00f;
  output0_local[(19)] = 0.000000e+00f;
  output0_local[(4)] = 0.000000e+00f;
  output0_local[(20)] = 0.000000e+00f;
  output0_local[(5)] = 0.000000e+00f;
  output0_local[(21)] = 0.000000e+00f;
  output0_local[(6)] = 0.000000e+00f;
  output0_local[(22)] = 0.000000e+00f;
  output0_local[(7)] = 0.000000e+00f;
  output0_local[(23)] = 0.000000e+00f;
  output0_local[(8)] = 0.000000e+00f;
  output0_local[(24)] = 0.000000e+00f;
  output0_local[(9)] = 0.000000e+00f;
  output0_local[(25)] = 0.000000e+00f;
  output0_local[(10)] = 0.000000e+00f;
  output0_local[(26)] = 0.000000e+00f;
  output0_local[(11)] = 0.000000e+00f;
  output0_local[(27)] = 0.000000e+00f;
  output0_local[(12)] = 0.000000e+00f;
  output0_local[(28)] = 0.000000e+00f;
  output0_local[(13)] = 0.000000e+00f;
  output0_local[(29)] = 0.000000e+00f;
  output0_local[(14)] = 0.000000e+00f;
  output0_local[(30)] = 0.000000e+00f;
  output0_local[(15)] = 0.000000e+00f;
  output0_local[(31)] = 0.000000e+00f;
  for (int C_outer_outer = 0; C_outer_outer < 3; ++C_outer_outer) {
    __shared__ float input0_shared[306];
  // [thread_extent] threadIdx.x = 64
    __syncthreads();
    if (1 <= ((((((int)blockIdx.x) % 392) / 14) * 8) + (((int)threadIdx.x) / 17))) {
      if (1 <= (((((int)blockIdx.x) % 14) * 16) + (((int)threadIdx.x) % 17))) {
        input0_shared[(((int)threadIdx.x))] = input0[(((((((((((int)blockIdx.x) / 392) * 301056) + (C_outer_outer * 50176)) + (((((int)blockIdx.x) % 392) / 14) * 1792)) + ((((int)threadIdx.x) / 17) * 224)) + ((((int)blockIdx.x) % 14) * 16)) + (((int)threadIdx.x) % 17)) - 225))];
      }
    }
    if (1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) + 13) % 17))) {
      input0_shared[((((int)threadIdx.x) + 64))] = input0[(((((((((((int)blockIdx.x) / 392) * 301056) + (C_outer_outer * 50176)) + (((((int)blockIdx.x) % 392) / 14) * 1792)) + (((((int)threadIdx.x) + 64) / 17) * 224)) + ((((int)blockIdx.x) % 14) * 16)) + ((((int)threadIdx.x) + 13) % 17)) - 225))];
    }
    if (1 <= ((((((int)blockIdx.x) % 392) / 14) * 8) + (((((int)threadIdx.x) + 128) % 153) / 17))) {
      if (1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) + 9) % 17))) {
        input0_shared[((((int)threadIdx.x) + 128))] = input0[((((((((((((int)blockIdx.x) / 392) * 301056) + (((((int)threadIdx.x) + 128) / 153) * 150528)) + (C_outer_outer * 50176)) + (((((int)blockIdx.x) % 392) / 14) * 1792)) + ((((((int)threadIdx.x) + 128) % 153) / 17) * 224)) + ((((int)blockIdx.x) % 14) * 16)) + ((((int)threadIdx.x) + 9) % 17)) - 225))];
      }
    }
    if (1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) + 5) % 17))) {
      input0_shared[((((int)threadIdx.x) + 192))] = input0[((((((((((((int)blockIdx.x) / 392) * 301056) + (((((int)threadIdx.x) + 192) / 153) * 150528)) + (C_outer_outer * 50176)) + (((((int)blockIdx.x) % 392) / 14) * 1792)) + (((((int)threadIdx.x) + 39) / 17) * 224)) + ((((int)blockIdx.x) % 14) * 16)) + ((((int)threadIdx.x) + 5) % 17)) - 225))];
    }
    if (((int)threadIdx.x) < 50) {
      if (1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) + 1) % 17))) {
        input0_shared[((((int)threadIdx.x) + 256))] = input0[((((((((((((int)blockIdx.x) / 392) * 301056) + (((((int)threadIdx.x) + 256) / 153) * 150528)) + (C_outer_outer * 50176)) + (((((int)blockIdx.x) % 392) / 14) * 1792)) + (((((int)threadIdx.x) + 103) / 17) * 224)) + ((((int)blockIdx.x) % 14) * 16)) + ((((int)threadIdx.x) + 1) % 17)) - 225))];
      }
    }
    __shared__ float input1_shared[288];
  // [thread_extent] threadIdx.x = 64
    input1_shared[(((int)threadIdx.x))] = input1[(((((((int)threadIdx.x) / 9) * 27) + (C_outer_outer * 9)) + (((int)threadIdx.x) % 9)))];
    input1_shared[((((int)threadIdx.x) + 64))] = input1[((((((((int)threadIdx.x) + 64) / 9) * 27) + (C_outer_outer * 9)) + ((((int)threadIdx.x) + 1) % 9)))];
    input1_shared[((((int)threadIdx.x) + 128))] = input1[((((((((int)threadIdx.x) + 128) / 9) * 27) + (C_outer_outer * 9)) + ((((int)threadIdx.x) + 2) % 9)))];
    input1_shared[((((int)threadIdx.x) + 192))] = input1[((((((((int)threadIdx.x) + 192) / 9) * 27) + (C_outer_outer * 9)) + ((((int)threadIdx.x) + 3) % 9)))];
    if (((int)threadIdx.x) < 32) {
      input1_shared[((((int)threadIdx.x) + 256))] = input1[((((((((int)threadIdx.x) + 256) / 9) * 27) + (C_outer_outer * 9)) + ((((int)threadIdx.x) + 4) % 9)))];
    }
    __syncthreads();
    output0_local[(0)] = (output0_local[(0)] + ((((14 <= (((int)blockIdx.x) % 392)) && (1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4)))) ? input0_shared[(((((int)threadIdx.x) & 3) * 4))] : 0.000000e+00f) * input1_shared[(((((int)threadIdx.x) >> 2) * 18))]));
    output0_local[(16)] = (output0_local[(16)] + ((((14 <= (((int)blockIdx.x) % 392)) && (1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4)))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 153))] : 0.000000e+00f) * input1_shared[(((((int)threadIdx.x) >> 2) * 18))]));
    output0_local[(0)] = (output0_local[(0)] + (((14 <= (((int)blockIdx.x) % 392)) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 1))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 1))]));
    output0_local[(16)] = (output0_local[(16)] + (((14 <= (((int)blockIdx.x) % 392)) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 154))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 1))]));
    output0_local[(0)] = (output0_local[(0)] + (((14 <= (((int)blockIdx.x) % 392)) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 2))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 2))]));
    output0_local[(16)] = (output0_local[(16)] + (((14 <= (((int)blockIdx.x) % 392)) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 155))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 2))]));
    output0_local[(1)] = (output0_local[(1)] + (((14 <= (((int)blockIdx.x) % 392)) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 2))] : 0.000000e+00f) * input1_shared[(((((int)threadIdx.x) >> 2) * 18))]));
    output0_local[(17)] = (output0_local[(17)] + (((14 <= (((int)blockIdx.x) % 392)) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 155))] : 0.000000e+00f) * input1_shared[(((((int)threadIdx.x) >> 2) * 18))]));
    output0_local[(1)] = (output0_local[(1)] + (((14 <= (((int)blockIdx.x) % 392)) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 3))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 1))]));
    output0_local[(17)] = (output0_local[(17)] + (((14 <= (((int)blockIdx.x) % 392)) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 156))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 1))]));
    output0_local[(1)] = (output0_local[(1)] + (((14 <= (((int)blockIdx.x) % 392)) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 4))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 2))]));
    output0_local[(17)] = (output0_local[(17)] + (((14 <= (((int)blockIdx.x) % 392)) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 157))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 2))]));
    output0_local[(2)] = (output0_local[(2)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 34))] : 0.000000e+00f) * input1_shared[(((((int)threadIdx.x) >> 2) * 18))]));
    output0_local[(18)] = (output0_local[(18)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 187))] : 0.000000e+00f) * input1_shared[(((((int)threadIdx.x) >> 2) * 18))]));
    output0_local[(2)] = (output0_local[(2)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 35))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 1))]));
    output0_local[(18)] = (output0_local[(18)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 188))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 1))]));
    output0_local[(2)] = (output0_local[(2)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 36))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 2))]));
    output0_local[(18)] = (output0_local[(18)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 189))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 2))]));
    output0_local[(3)] = (output0_local[(3)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 36))] * input1_shared[(((((int)threadIdx.x) >> 2) * 18))]));
    output0_local[(19)] = (output0_local[(19)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 189))] * input1_shared[(((((int)threadIdx.x) >> 2) * 18))]));
    output0_local[(3)] = (output0_local[(3)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 37))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 1))]));
    output0_local[(19)] = (output0_local[(19)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 190))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 1))]));
    output0_local[(3)] = (output0_local[(3)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 38))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 2))]));
    output0_local[(19)] = (output0_local[(19)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 191))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 2))]));
    output0_local[(4)] = (output0_local[(4)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 68))] : 0.000000e+00f) * input1_shared[(((((int)threadIdx.x) >> 2) * 18))]));
    output0_local[(20)] = (output0_local[(20)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 221))] : 0.000000e+00f) * input1_shared[(((((int)threadIdx.x) >> 2) * 18))]));
    output0_local[(4)] = (output0_local[(4)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 69))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 1))]));
    output0_local[(20)] = (output0_local[(20)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 222))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 1))]));
    output0_local[(4)] = (output0_local[(4)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 70))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 2))]));
    output0_local[(20)] = (output0_local[(20)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 223))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 2))]));
    output0_local[(5)] = (output0_local[(5)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 70))] * input1_shared[(((((int)threadIdx.x) >> 2) * 18))]));
    output0_local[(21)] = (output0_local[(21)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 223))] * input1_shared[(((((int)threadIdx.x) >> 2) * 18))]));
    output0_local[(5)] = (output0_local[(5)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 71))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 1))]));
    output0_local[(21)] = (output0_local[(21)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 224))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 1))]));
    output0_local[(5)] = (output0_local[(5)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 72))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 2))]));
    output0_local[(21)] = (output0_local[(21)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 225))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 2))]));
    output0_local[(6)] = (output0_local[(6)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 102))] : 0.000000e+00f) * input1_shared[(((((int)threadIdx.x) >> 2) * 18))]));
    output0_local[(22)] = (output0_local[(22)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 255))] : 0.000000e+00f) * input1_shared[(((((int)threadIdx.x) >> 2) * 18))]));
    output0_local[(6)] = (output0_local[(6)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 103))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 1))]));
    output0_local[(22)] = (output0_local[(22)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 256))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 1))]));
    output0_local[(6)] = (output0_local[(6)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 104))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 2))]));
    output0_local[(22)] = (output0_local[(22)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 257))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 2))]));
    output0_local[(7)] = (output0_local[(7)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 104))] * input1_shared[(((((int)threadIdx.x) >> 2) * 18))]));
    output0_local[(23)] = (output0_local[(23)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 257))] * input1_shared[(((((int)threadIdx.x) >> 2) * 18))]));
    output0_local[(7)] = (output0_local[(7)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 105))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 1))]));
    output0_local[(23)] = (output0_local[(23)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 258))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 1))]));
    output0_local[(7)] = (output0_local[(7)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 106))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 2))]));
    output0_local[(23)] = (output0_local[(23)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 259))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 2))]));
    output0_local[(8)] = (output0_local[(8)] + ((((14 <= (((int)blockIdx.x) % 392)) && (1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4)))) ? input0_shared[(((((int)threadIdx.x) & 3) * 4))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 9))]));
    output0_local[(24)] = (output0_local[(24)] + ((((14 <= (((int)blockIdx.x) % 392)) && (1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4)))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 153))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 9))]));
    output0_local[(8)] = (output0_local[(8)] + (((14 <= (((int)blockIdx.x) % 392)) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 1))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 10))]));
    output0_local[(24)] = (output0_local[(24)] + (((14 <= (((int)blockIdx.x) % 392)) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 154))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 10))]));
    output0_local[(8)] = (output0_local[(8)] + (((14 <= (((int)blockIdx.x) % 392)) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 2))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 11))]));
    output0_local[(24)] = (output0_local[(24)] + (((14 <= (((int)blockIdx.x) % 392)) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 155))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 11))]));
    output0_local[(9)] = (output0_local[(9)] + (((14 <= (((int)blockIdx.x) % 392)) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 2))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 9))]));
    output0_local[(25)] = (output0_local[(25)] + (((14 <= (((int)blockIdx.x) % 392)) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 155))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 9))]));
    output0_local[(9)] = (output0_local[(9)] + (((14 <= (((int)blockIdx.x) % 392)) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 3))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 10))]));
    output0_local[(25)] = (output0_local[(25)] + (((14 <= (((int)blockIdx.x) % 392)) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 156))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 10))]));
    output0_local[(9)] = (output0_local[(9)] + (((14 <= (((int)blockIdx.x) % 392)) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 4))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 11))]));
    output0_local[(25)] = (output0_local[(25)] + (((14 <= (((int)blockIdx.x) % 392)) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 157))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 11))]));
    output0_local[(10)] = (output0_local[(10)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 34))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 9))]));
    output0_local[(26)] = (output0_local[(26)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 187))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 9))]));
    output0_local[(10)] = (output0_local[(10)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 35))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 10))]));
    output0_local[(26)] = (output0_local[(26)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 188))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 10))]));
    output0_local[(10)] = (output0_local[(10)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 36))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 11))]));
    output0_local[(26)] = (output0_local[(26)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 189))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 11))]));
    output0_local[(11)] = (output0_local[(11)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 36))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 9))]));
    output0_local[(27)] = (output0_local[(27)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 189))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 9))]));
    output0_local[(11)] = (output0_local[(11)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 37))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 10))]));
    output0_local[(27)] = (output0_local[(27)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 190))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 10))]));
    output0_local[(11)] = (output0_local[(11)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 38))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 11))]));
    output0_local[(27)] = (output0_local[(27)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 191))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 11))]));
    output0_local[(12)] = (output0_local[(12)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 68))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 9))]));
    output0_local[(28)] = (output0_local[(28)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 221))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 9))]));
    output0_local[(12)] = (output0_local[(12)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 69))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 10))]));
    output0_local[(28)] = (output0_local[(28)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 222))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 10))]));
    output0_local[(12)] = (output0_local[(12)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 70))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 11))]));
    output0_local[(28)] = (output0_local[(28)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 223))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 11))]));
    output0_local[(13)] = (output0_local[(13)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 70))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 9))]));
    output0_local[(29)] = (output0_local[(29)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 223))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 9))]));
    output0_local[(13)] = (output0_local[(13)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 71))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 10))]));
    output0_local[(29)] = (output0_local[(29)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 224))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 10))]));
    output0_local[(13)] = (output0_local[(13)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 72))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 11))]));
    output0_local[(29)] = (output0_local[(29)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 225))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 11))]));
    output0_local[(14)] = (output0_local[(14)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 102))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 9))]));
    output0_local[(30)] = (output0_local[(30)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 255))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 9))]));
    output0_local[(14)] = (output0_local[(14)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 103))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 10))]));
    output0_local[(30)] = (output0_local[(30)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 256))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 10))]));
    output0_local[(14)] = (output0_local[(14)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 104))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 11))]));
    output0_local[(30)] = (output0_local[(30)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 257))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 11))]));
    output0_local[(15)] = (output0_local[(15)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 104))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 9))]));
    output0_local[(31)] = (output0_local[(31)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 257))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 9))]));
    output0_local[(15)] = (output0_local[(15)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 105))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 10))]));
    output0_local[(31)] = (output0_local[(31)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 258))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 10))]));
    output0_local[(15)] = (output0_local[(15)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 106))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 11))]));
    output0_local[(31)] = (output0_local[(31)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 259))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 11))]));
    output0_local[(0)] = (output0_local[(0)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 17))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 3))]));
    output0_local[(16)] = (output0_local[(16)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 170))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 3))]));
    output0_local[(0)] = (output0_local[(0)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 18))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 4))]));
    output0_local[(16)] = (output0_local[(16)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 171))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 4))]));
    output0_local[(0)] = (output0_local[(0)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 19))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 5))]));
    output0_local[(16)] = (output0_local[(16)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 172))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 5))]));
    output0_local[(1)] = (output0_local[(1)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 19))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 3))]));
    output0_local[(17)] = (output0_local[(17)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 172))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 3))]));
    output0_local[(1)] = (output0_local[(1)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 20))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 4))]));
    output0_local[(17)] = (output0_local[(17)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 173))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 4))]));
    output0_local[(1)] = (output0_local[(1)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 21))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 5))]));
    output0_local[(17)] = (output0_local[(17)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 174))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 5))]));
    output0_local[(2)] = (output0_local[(2)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 51))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 3))]));
    output0_local[(18)] = (output0_local[(18)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 204))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 3))]));
    output0_local[(2)] = (output0_local[(2)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 52))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 4))]));
    output0_local[(18)] = (output0_local[(18)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 205))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 4))]));
    output0_local[(2)] = (output0_local[(2)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 53))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 5))]));
    output0_local[(18)] = (output0_local[(18)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 206))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 5))]));
    output0_local[(3)] = (output0_local[(3)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 53))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 3))]));
    output0_local[(19)] = (output0_local[(19)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 206))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 3))]));
    output0_local[(3)] = (output0_local[(3)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 54))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 4))]));
    output0_local[(19)] = (output0_local[(19)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 207))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 4))]));
    output0_local[(3)] = (output0_local[(3)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 55))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 5))]));
    output0_local[(19)] = (output0_local[(19)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 208))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 5))]));
    output0_local[(4)] = (output0_local[(4)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 85))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 3))]));
    output0_local[(20)] = (output0_local[(20)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 238))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 3))]));
    output0_local[(4)] = (output0_local[(4)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 86))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 4))]));
    output0_local[(20)] = (output0_local[(20)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 239))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 4))]));
    output0_local[(4)] = (output0_local[(4)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 87))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 5))]));
    output0_local[(20)] = (output0_local[(20)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 240))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 5))]));
    output0_local[(5)] = (output0_local[(5)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 87))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 3))]));
    output0_local[(21)] = (output0_local[(21)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 240))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 3))]));
    output0_local[(5)] = (output0_local[(5)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 88))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 4))]));
    output0_local[(21)] = (output0_local[(21)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 241))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 4))]));
    output0_local[(5)] = (output0_local[(5)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 89))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 5))]));
    output0_local[(21)] = (output0_local[(21)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 242))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 5))]));
    output0_local[(6)] = (output0_local[(6)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 119))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 3))]));
    output0_local[(22)] = (output0_local[(22)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 272))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 3))]));
    output0_local[(6)] = (output0_local[(6)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 120))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 4))]));
    output0_local[(22)] = (output0_local[(22)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 273))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 4))]));
    output0_local[(6)] = (output0_local[(6)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 121))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 5))]));
    output0_local[(22)] = (output0_local[(22)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 274))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 5))]));
    output0_local[(7)] = (output0_local[(7)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 121))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 3))]));
    output0_local[(23)] = (output0_local[(23)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 274))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 3))]));
    output0_local[(7)] = (output0_local[(7)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 122))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 4))]));
    output0_local[(23)] = (output0_local[(23)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 275))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 4))]));
    output0_local[(7)] = (output0_local[(7)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 123))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 5))]));
    output0_local[(23)] = (output0_local[(23)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 276))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 5))]));
    output0_local[(8)] = (output0_local[(8)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 17))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 12))]));
    output0_local[(24)] = (output0_local[(24)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 170))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 12))]));
    output0_local[(8)] = (output0_local[(8)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 18))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 13))]));
    output0_local[(24)] = (output0_local[(24)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 171))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 13))]));
    output0_local[(8)] = (output0_local[(8)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 19))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 14))]));
    output0_local[(24)] = (output0_local[(24)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 172))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 14))]));
    output0_local[(9)] = (output0_local[(9)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 19))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 12))]));
    output0_local[(25)] = (output0_local[(25)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 172))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 12))]));
    output0_local[(9)] = (output0_local[(9)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 20))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 13))]));
    output0_local[(25)] = (output0_local[(25)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 173))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 13))]));
    output0_local[(9)] = (output0_local[(9)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 21))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 14))]));
    output0_local[(25)] = (output0_local[(25)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 174))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 14))]));
    output0_local[(10)] = (output0_local[(10)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 51))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 12))]));
    output0_local[(26)] = (output0_local[(26)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 204))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 12))]));
    output0_local[(10)] = (output0_local[(10)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 52))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 13))]));
    output0_local[(26)] = (output0_local[(26)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 205))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 13))]));
    output0_local[(10)] = (output0_local[(10)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 53))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 14))]));
    output0_local[(26)] = (output0_local[(26)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 206))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 14))]));
    output0_local[(11)] = (output0_local[(11)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 53))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 12))]));
    output0_local[(27)] = (output0_local[(27)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 206))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 12))]));
    output0_local[(11)] = (output0_local[(11)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 54))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 13))]));
    output0_local[(27)] = (output0_local[(27)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 207))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 13))]));
    output0_local[(11)] = (output0_local[(11)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 55))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 14))]));
    output0_local[(27)] = (output0_local[(27)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 208))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 14))]));
    output0_local[(12)] = (output0_local[(12)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 85))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 12))]));
    output0_local[(28)] = (output0_local[(28)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 238))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 12))]));
    output0_local[(12)] = (output0_local[(12)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 86))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 13))]));
    output0_local[(28)] = (output0_local[(28)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 239))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 13))]));
    output0_local[(12)] = (output0_local[(12)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 87))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 14))]));
    output0_local[(28)] = (output0_local[(28)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 240))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 14))]));
    output0_local[(13)] = (output0_local[(13)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 87))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 12))]));
    output0_local[(29)] = (output0_local[(29)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 240))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 12))]));
    output0_local[(13)] = (output0_local[(13)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 88))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 13))]));
    output0_local[(29)] = (output0_local[(29)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 241))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 13))]));
    output0_local[(13)] = (output0_local[(13)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 89))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 14))]));
    output0_local[(29)] = (output0_local[(29)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 242))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 14))]));
    output0_local[(14)] = (output0_local[(14)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 119))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 12))]));
    output0_local[(30)] = (output0_local[(30)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 272))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 12))]));
    output0_local[(14)] = (output0_local[(14)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 120))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 13))]));
    output0_local[(30)] = (output0_local[(30)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 273))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 13))]));
    output0_local[(14)] = (output0_local[(14)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 121))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 14))]));
    output0_local[(30)] = (output0_local[(30)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 274))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 14))]));
    output0_local[(15)] = (output0_local[(15)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 121))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 12))]));
    output0_local[(31)] = (output0_local[(31)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 274))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 12))]));
    output0_local[(15)] = (output0_local[(15)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 122))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 13))]));
    output0_local[(31)] = (output0_local[(31)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 275))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 13))]));
    output0_local[(15)] = (output0_local[(15)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 123))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 14))]));
    output0_local[(31)] = (output0_local[(31)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 276))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 14))]));
    output0_local[(0)] = (output0_local[(0)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 34))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 6))]));
    output0_local[(16)] = (output0_local[(16)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 187))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 6))]));
    output0_local[(0)] = (output0_local[(0)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 35))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 7))]));
    output0_local[(16)] = (output0_local[(16)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 188))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 7))]));
    output0_local[(0)] = (output0_local[(0)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 36))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 8))]));
    output0_local[(16)] = (output0_local[(16)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 189))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 8))]));
    output0_local[(1)] = (output0_local[(1)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 36))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 6))]));
    output0_local[(17)] = (output0_local[(17)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 189))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 6))]));
    output0_local[(1)] = (output0_local[(1)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 37))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 7))]));
    output0_local[(17)] = (output0_local[(17)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 190))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 7))]));
    output0_local[(1)] = (output0_local[(1)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 38))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 8))]));
    output0_local[(17)] = (output0_local[(17)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 191))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 8))]));
    output0_local[(2)] = (output0_local[(2)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 68))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 6))]));
    output0_local[(18)] = (output0_local[(18)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 221))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 6))]));
    output0_local[(2)] = (output0_local[(2)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 69))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 7))]));
    output0_local[(18)] = (output0_local[(18)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 222))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 7))]));
    output0_local[(2)] = (output0_local[(2)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 70))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 8))]));
    output0_local[(18)] = (output0_local[(18)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 223))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 8))]));
    output0_local[(3)] = (output0_local[(3)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 70))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 6))]));
    output0_local[(19)] = (output0_local[(19)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 223))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 6))]));
    output0_local[(3)] = (output0_local[(3)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 71))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 7))]));
    output0_local[(19)] = (output0_local[(19)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 224))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 7))]));
    output0_local[(3)] = (output0_local[(3)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 72))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 8))]));
    output0_local[(19)] = (output0_local[(19)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 225))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 8))]));
    output0_local[(4)] = (output0_local[(4)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 102))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 6))]));
    output0_local[(20)] = (output0_local[(20)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 255))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 6))]));
    output0_local[(4)] = (output0_local[(4)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 103))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 7))]));
    output0_local[(20)] = (output0_local[(20)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 256))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 7))]));
    output0_local[(4)] = (output0_local[(4)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 104))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 8))]));
    output0_local[(20)] = (output0_local[(20)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 257))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 8))]));
    output0_local[(5)] = (output0_local[(5)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 104))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 6))]));
    output0_local[(21)] = (output0_local[(21)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 257))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 6))]));
    output0_local[(5)] = (output0_local[(5)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 105))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 7))]));
    output0_local[(21)] = (output0_local[(21)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 258))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 7))]));
    output0_local[(5)] = (output0_local[(5)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 106))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 8))]));
    output0_local[(21)] = (output0_local[(21)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 259))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 8))]));
    output0_local[(6)] = (output0_local[(6)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 136))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 6))]));
    output0_local[(22)] = (output0_local[(22)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 289))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 6))]));
    output0_local[(6)] = (output0_local[(6)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 137))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 7))]));
    output0_local[(22)] = (output0_local[(22)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 290))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 7))]));
    output0_local[(6)] = (output0_local[(6)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 138))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 8))]));
    output0_local[(22)] = (output0_local[(22)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 291))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 8))]));
    output0_local[(7)] = (output0_local[(7)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 138))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 6))]));
    output0_local[(23)] = (output0_local[(23)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 291))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 6))]));
    output0_local[(7)] = (output0_local[(7)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 139))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 7))]));
    output0_local[(23)] = (output0_local[(23)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 292))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 7))]));
    output0_local[(7)] = (output0_local[(7)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 140))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 8))]));
    output0_local[(23)] = (output0_local[(23)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 293))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 8))]));
    output0_local[(8)] = (output0_local[(8)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 34))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 15))]));
    output0_local[(24)] = (output0_local[(24)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 187))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 15))]));
    output0_local[(8)] = (output0_local[(8)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 35))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 16))]));
    output0_local[(24)] = (output0_local[(24)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 188))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 16))]));
    output0_local[(8)] = (output0_local[(8)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 36))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 17))]));
    output0_local[(24)] = (output0_local[(24)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 189))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 17))]));
    output0_local[(9)] = (output0_local[(9)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 36))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 15))]));
    output0_local[(25)] = (output0_local[(25)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 189))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 15))]));
    output0_local[(9)] = (output0_local[(9)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 37))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 16))]));
    output0_local[(25)] = (output0_local[(25)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 190))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 16))]));
    output0_local[(9)] = (output0_local[(9)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 38))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 17))]));
    output0_local[(25)] = (output0_local[(25)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 191))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 17))]));
    output0_local[(10)] = (output0_local[(10)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 68))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 15))]));
    output0_local[(26)] = (output0_local[(26)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 221))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 15))]));
    output0_local[(10)] = (output0_local[(10)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 69))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 16))]));
    output0_local[(26)] = (output0_local[(26)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 222))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 16))]));
    output0_local[(10)] = (output0_local[(10)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 70))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 17))]));
    output0_local[(26)] = (output0_local[(26)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 223))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 17))]));
    output0_local[(11)] = (output0_local[(11)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 70))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 15))]));
    output0_local[(27)] = (output0_local[(27)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 223))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 15))]));
    output0_local[(11)] = (output0_local[(11)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 71))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 16))]));
    output0_local[(27)] = (output0_local[(27)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 224))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 16))]));
    output0_local[(11)] = (output0_local[(11)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 72))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 17))]));
    output0_local[(27)] = (output0_local[(27)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 225))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 17))]));
    output0_local[(12)] = (output0_local[(12)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 102))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 15))]));
    output0_local[(28)] = (output0_local[(28)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 255))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 15))]));
    output0_local[(12)] = (output0_local[(12)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 103))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 16))]));
    output0_local[(28)] = (output0_local[(28)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 256))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 16))]));
    output0_local[(12)] = (output0_local[(12)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 104))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 17))]));
    output0_local[(28)] = (output0_local[(28)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 257))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 17))]));
    output0_local[(13)] = (output0_local[(13)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 104))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 15))]));
    output0_local[(29)] = (output0_local[(29)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 257))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 15))]));
    output0_local[(13)] = (output0_local[(13)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 105))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 16))]));
    output0_local[(29)] = (output0_local[(29)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 258))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 16))]));
    output0_local[(13)] = (output0_local[(13)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 106))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 17))]));
    output0_local[(29)] = (output0_local[(29)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 259))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 17))]));
    output0_local[(14)] = (output0_local[(14)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 136))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 15))]));
    output0_local[(30)] = (output0_local[(30)] + (((1 <= (((((int)blockIdx.x) % 14) * 16) + ((((int)threadIdx.x) & 3) * 4))) ? input0_shared[((((((int)threadIdx.x) & 3) * 4) + 289))] : 0.000000e+00f) * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 15))]));
    output0_local[(14)] = (output0_local[(14)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 137))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 16))]));
    output0_local[(30)] = (output0_local[(30)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 290))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 16))]));
    output0_local[(14)] = (output0_local[(14)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 138))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 17))]));
    output0_local[(30)] = (output0_local[(30)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 291))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 17))]));
    output0_local[(15)] = (output0_local[(15)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 138))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 15))]));
    output0_local[(31)] = (output0_local[(31)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 291))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 15))]));
    output0_local[(15)] = (output0_local[(15)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 139))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 16))]));
    output0_local[(31)] = (output0_local[(31)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 292))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 16))]));
    output0_local[(15)] = (output0_local[(15)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 140))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 17))]));
    output0_local[(31)] = (output0_local[(31)] + (input0_shared[((((((int)threadIdx.x) & 3) * 4) + 293))] * input1_shared[((((((int)threadIdx.x) >> 2) * 18) + 17))]));
  }
  for (int F_inner = 0; F_inner < 2; ++F_inner) {
    for (int HO_inner = 0; HO_inner < 4; ++HO_inner) {
      for (int WO_inner = 0; WO_inner < 2; ++WO_inner) {
        output0[((((((((((((int)blockIdx.x) / 392) * 802816) + ((((int)threadIdx.x) >> 2) * 25088)) + (F_inner * 12544)) + (((((int)blockIdx.x) % 392) / 14) * 448)) + (HO_inner * 112)) + ((((int)blockIdx.x) % 14) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + WO_inner))] = output0_local[((((F_inner * 8) + (HO_inner * 2)) + WO_inner))];
        output0[(((((((((((((int)blockIdx.x) / 392) * 802816) + ((((int)threadIdx.x) >> 2) * 25088)) + (F_inner * 12544)) + (((((int)blockIdx.x) % 392) / 14) * 448)) + (HO_inner * 112)) + ((((int)blockIdx.x) % 14) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + WO_inner) + 401408))] = output0_local[(((((F_inner * 8) + (HO_inner * 2)) + WO_inner) + 16))];
      }
    }
  }
}

// Saved Perf = 1.843710e-04 sec / run; Step Produced = 765; Planned Steps = 1000;
// Antares Tuning Completed in 1000 steps.
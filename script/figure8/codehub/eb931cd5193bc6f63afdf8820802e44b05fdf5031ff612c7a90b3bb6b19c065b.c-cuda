// GLOBALS: input0:float32[212], input1:float32[32, 212, 7, 7], input2:float32[440, 212, 1, 1] -> output0:float32[32, 440, 7, 7]
// BACKEND: c-cuda (default)
// CONFIG: {"Toutput0:D0": [-1, 1, 4, 2], "Toutput0:D1": [-1, 20, 1, 2], "Toutput0:D2": [-1, 1, 1, 1], "Toutput0:D3": [-1, 1, 7, 1], "Toutput0:R0": [-1, 2, 2], "Toutput0:RA": 0, "Toutput0:S": 3, "Toutput0:U": 1}
// COMPUTE_V1: - einstein_v2(" mediate0[N0, N1, N2, N3] = input0[N1] where N0 in 32, N2 in 7, N3 in 7;   mediate1[N0, N1, N2, N3] = input1[N0, N1, N2, N3] + mediate0[N0, N1, N2, N3]; mediate2[N0, N1, N2, N3] = mediate1[N0, N1, N2, N3].call(`max`, [const(0).cast(mediate1[N0, N1, N2, N3].dtype())]); output0[N, F, HO, WO] +=! mediate2[N, C, -0 + KH + HO * 1, -0 + KW + WO * 1] * input2[F, C, KH, KW] where HO in 7, WO in 7; ", input_dict={ "input0" : { "dtype" : "float32", "shape" : [212]} ,  "input1" : { "dtype" : "float32", "shape" : [32, 212, 7, 7]} ,  "input2" : { "dtype" : "float32", "shape" : [440, 212, 1, 1]} }) ## @:  memcpy


// ---------------------------------------------------------------------------
// LOCAL: template_op_kernel0 -- input0:float32[212], input1:float32[32, 212, 7, 7], input2:float32[440, 212, 1, 1] -> output0:float32[32, 440, 7, 7]

#include <cuda_runtime.h>
#include <cuda_fp16.h>
#include <mma.h>

#ifndef __CUDA_COMMON_MACRO__
#define __CUDA_COMMON_MACRO__

#define __ITEM_0_OF__(v) (v).x
#define __ITEM_1_OF__(v) (v).y
#define __ITEM_2_OF__(v) (v).z
#define __ITEM_3_OF__(v) (v).w

#define __STORE_ITEM_0__(t, out, ido, in, idi) *(t*)(out + ido) = *(t*)(in + idi)
#define __STORE_ITEM_1__(t, out, ido, in, idi)
#define __STORE_ITEM_2__(t, out, ido, in, idi)
#define __STORE_ITEM_3__(t, out, ido, in, idi)

#define MAKE_VEC4_OP(type) \
  __forceinline__ __device__ type operator+(const type &l, const type &r) { return make_##type(l.x + r.x, l.y + r.y, l.z + r.z, l.w + r.w); } \
  __forceinline__ __device__ type operator-(const type &l, const type &r) { return make_##type(l.x - r.x, l.y - r.y, l.z - r.z, l.w - r.w); } \
  __forceinline__ __device__ type operator*(const type &l, const type &r) { return make_##type(l.x * r.x, l.y * r.y, l.z * r.z, l.w * r.w); } \
  __forceinline__ __device__ type operator/(const type &l, const type &r) { return make_##type(l.x / r.x, l.y / r.y, l.z / r.z, l.w / r.w); } \
  __forceinline__ __device__ type operator%(const type &l, const type &r) { return make_##type(l.x % r.x, l.y % r.y, l.z % r.z, l.w % r.w); }
#define MAKE_VEC2_OP(type) \
  __forceinline__ __device__ type operator+(const type &l, const type &r) { return make_##type(l.x + r.x, l.y + r.y); } \
  __forceinline__ __device__ type operator-(const type &l, const type &r) { return make_##type(l.x - r.x, l.y - r.y); } \
  __forceinline__ __device__ type operator*(const type &l, const type &r) { return make_##type(l.x * r.x, l.y * r.y); } \
  __forceinline__ __device__ type operator/(const type &l, const type &r) { return make_##type(l.x / r.x, l.y / r.y); } \
  __forceinline__ __device__ type operator%(const type &l, const type &r) { return make_##type(l.x % r.x, l.y % r.y); }

MAKE_VEC4_OP(int4)
MAKE_VEC2_OP(int2)

#endif


extern "C" __global__ __launch_bounds__(28) void template_op_kernel0(float* __restrict__ input0, float* __restrict__ input1, float* __restrict__ input2, float* __restrict__ output0) {
  // [thread_extent] blockIdx.x = 308
  // [thread_extent] threadIdx.x = 28
  float output0_local[80];
  output0_local[(0)] = 0.000000e+00f;
  output0_local[(4)] = 0.000000e+00f;
  output0_local[(8)] = 0.000000e+00f;
  output0_local[(12)] = 0.000000e+00f;
  output0_local[(16)] = 0.000000e+00f;
  output0_local[(20)] = 0.000000e+00f;
  output0_local[(24)] = 0.000000e+00f;
  output0_local[(28)] = 0.000000e+00f;
  output0_local[(32)] = 0.000000e+00f;
  output0_local[(36)] = 0.000000e+00f;
  output0_local[(40)] = 0.000000e+00f;
  output0_local[(44)] = 0.000000e+00f;
  output0_local[(48)] = 0.000000e+00f;
  output0_local[(52)] = 0.000000e+00f;
  output0_local[(56)] = 0.000000e+00f;
  output0_local[(60)] = 0.000000e+00f;
  output0_local[(64)] = 0.000000e+00f;
  output0_local[(68)] = 0.000000e+00f;
  output0_local[(72)] = 0.000000e+00f;
  output0_local[(76)] = 0.000000e+00f;
  output0_local[(1)] = 0.000000e+00f;
  output0_local[(5)] = 0.000000e+00f;
  output0_local[(9)] = 0.000000e+00f;
  output0_local[(13)] = 0.000000e+00f;
  output0_local[(17)] = 0.000000e+00f;
  output0_local[(21)] = 0.000000e+00f;
  output0_local[(25)] = 0.000000e+00f;
  output0_local[(29)] = 0.000000e+00f;
  output0_local[(33)] = 0.000000e+00f;
  output0_local[(37)] = 0.000000e+00f;
  output0_local[(41)] = 0.000000e+00f;
  output0_local[(45)] = 0.000000e+00f;
  output0_local[(49)] = 0.000000e+00f;
  output0_local[(53)] = 0.000000e+00f;
  output0_local[(57)] = 0.000000e+00f;
  output0_local[(61)] = 0.000000e+00f;
  output0_local[(65)] = 0.000000e+00f;
  output0_local[(69)] = 0.000000e+00f;
  output0_local[(73)] = 0.000000e+00f;
  output0_local[(77)] = 0.000000e+00f;
  output0_local[(2)] = 0.000000e+00f;
  output0_local[(6)] = 0.000000e+00f;
  output0_local[(10)] = 0.000000e+00f;
  output0_local[(14)] = 0.000000e+00f;
  output0_local[(18)] = 0.000000e+00f;
  output0_local[(22)] = 0.000000e+00f;
  output0_local[(26)] = 0.000000e+00f;
  output0_local[(30)] = 0.000000e+00f;
  output0_local[(34)] = 0.000000e+00f;
  output0_local[(38)] = 0.000000e+00f;
  output0_local[(42)] = 0.000000e+00f;
  output0_local[(46)] = 0.000000e+00f;
  output0_local[(50)] = 0.000000e+00f;
  output0_local[(54)] = 0.000000e+00f;
  output0_local[(58)] = 0.000000e+00f;
  output0_local[(62)] = 0.000000e+00f;
  output0_local[(66)] = 0.000000e+00f;
  output0_local[(70)] = 0.000000e+00f;
  output0_local[(74)] = 0.000000e+00f;
  output0_local[(78)] = 0.000000e+00f;
  output0_local[(3)] = 0.000000e+00f;
  output0_local[(7)] = 0.000000e+00f;
  output0_local[(11)] = 0.000000e+00f;
  output0_local[(15)] = 0.000000e+00f;
  output0_local[(19)] = 0.000000e+00f;
  output0_local[(23)] = 0.000000e+00f;
  output0_local[(27)] = 0.000000e+00f;
  output0_local[(31)] = 0.000000e+00f;
  output0_local[(35)] = 0.000000e+00f;
  output0_local[(39)] = 0.000000e+00f;
  output0_local[(43)] = 0.000000e+00f;
  output0_local[(47)] = 0.000000e+00f;
  output0_local[(51)] = 0.000000e+00f;
  output0_local[(55)] = 0.000000e+00f;
  output0_local[(59)] = 0.000000e+00f;
  output0_local[(63)] = 0.000000e+00f;
  output0_local[(67)] = 0.000000e+00f;
  output0_local[(71)] = 0.000000e+00f;
  output0_local[(75)] = 0.000000e+00f;
  output0_local[(79)] = 0.000000e+00f;
  for (int C_outer_outer = 0; C_outer_outer < 53; ++C_outer_outer) {
    __shared__ float mediate2_shared[224];
  // [thread_extent] threadIdx.x = 28
    __syncthreads();
    mediate2_shared[(((int)threadIdx.x))] = max((input1[(((((((((int)blockIdx.x) / 77) * 83104) + (C_outer_outer * 196)) + ((((int)threadIdx.x) / 7) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + (((int)threadIdx.x) % 7)))] + input0[(((C_outer_outer * 4) + (((int)threadIdx.x) / 7)))]), 0.000000e+00f);
    mediate2_shared[((((int)threadIdx.x) + 28))] = max((input1[((((((((((int)blockIdx.x) / 77) * 83104) + (C_outer_outer * 196)) + ((((int)threadIdx.x) / 7) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + (((int)threadIdx.x) % 7)) + 10388))] + input0[(((C_outer_outer * 4) + (((int)threadIdx.x) / 7)))]), 0.000000e+00f);
    mediate2_shared[((((int)threadIdx.x) + 56))] = max((input1[((((((((((int)blockIdx.x) / 77) * 83104) + (C_outer_outer * 196)) + ((((int)threadIdx.x) / 7) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + (((int)threadIdx.x) % 7)) + 20776))] + input0[(((C_outer_outer * 4) + (((int)threadIdx.x) / 7)))]), 0.000000e+00f);
    mediate2_shared[((((int)threadIdx.x) + 84))] = max((input1[((((((((((int)blockIdx.x) / 77) * 83104) + (C_outer_outer * 196)) + ((((int)threadIdx.x) / 7) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + (((int)threadIdx.x) % 7)) + 31164))] + input0[(((C_outer_outer * 4) + (((int)threadIdx.x) / 7)))]), 0.000000e+00f);
    mediate2_shared[((((int)threadIdx.x) + 112))] = max((input1[((((((((((int)blockIdx.x) / 77) * 83104) + (C_outer_outer * 196)) + ((((int)threadIdx.x) / 7) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + (((int)threadIdx.x) % 7)) + 41552))] + input0[(((C_outer_outer * 4) + (((int)threadIdx.x) / 7)))]), 0.000000e+00f);
    mediate2_shared[((((int)threadIdx.x) + 140))] = max((input1[((((((((((int)blockIdx.x) / 77) * 83104) + (C_outer_outer * 196)) + ((((int)threadIdx.x) / 7) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + (((int)threadIdx.x) % 7)) + 51940))] + input0[(((C_outer_outer * 4) + (((int)threadIdx.x) / 7)))]), 0.000000e+00f);
    mediate2_shared[((((int)threadIdx.x) + 168))] = max((input1[((((((((((int)blockIdx.x) / 77) * 83104) + (C_outer_outer * 196)) + ((((int)threadIdx.x) / 7) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + (((int)threadIdx.x) % 7)) + 62328))] + input0[(((C_outer_outer * 4) + (((int)threadIdx.x) / 7)))]), 0.000000e+00f);
    mediate2_shared[((((int)threadIdx.x) + 196))] = max((input1[((((((((((int)blockIdx.x) / 77) * 83104) + (C_outer_outer * 196)) + ((((int)threadIdx.x) / 7) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + (((int)threadIdx.x) % 7)) + 72716))] + input0[(((C_outer_outer * 4) + (((int)threadIdx.x) / 7)))]), 0.000000e+00f);
    __shared__ float input2_shared[160];
  // [thread_extent] threadIdx.x = 28
    input2_shared[(((int)threadIdx.x))] = input2[(((((((((int)blockIdx.x) % 77) / 7) * 8480) + ((((int)threadIdx.x) >> 2) * 212)) + (C_outer_outer * 4)) + (((int)threadIdx.x) & 3)))];
    input2_shared[((((int)threadIdx.x) + 28))] = input2[((((((((((int)blockIdx.x) % 77) / 7) * 8480) + ((((int)threadIdx.x) >> 2) * 212)) + (C_outer_outer * 4)) + (((int)threadIdx.x) & 3)) + 1484))];
    input2_shared[((((int)threadIdx.x) + 56))] = input2[((((((((((int)blockIdx.x) % 77) / 7) * 8480) + ((((int)threadIdx.x) >> 2) * 212)) + (C_outer_outer * 4)) + (((int)threadIdx.x) & 3)) + 2968))];
    input2_shared[((((int)threadIdx.x) + 84))] = input2[((((((((((int)blockIdx.x) % 77) / 7) * 8480) + ((((int)threadIdx.x) >> 2) * 212)) + (C_outer_outer * 4)) + (((int)threadIdx.x) & 3)) + 4452))];
    input2_shared[((((int)threadIdx.x) + 112))] = input2[((((((((((int)blockIdx.x) % 77) / 7) * 8480) + ((((int)threadIdx.x) >> 2) * 212)) + (C_outer_outer * 4)) + (((int)threadIdx.x) & 3)) + 5936))];
    if (((int)threadIdx.x) < 20) {
      input2_shared[((((int)threadIdx.x) + 140))] = input2[((((((((((int)blockIdx.x) % 77) / 7) * 8480) + ((((int)threadIdx.x) >> 2) * 212)) + (C_outer_outer * 4)) + (((int)threadIdx.x) & 3)) + 7420))];
    }
    __syncthreads();
    output0_local[(0)] = (output0_local[(0)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(0)]));
    output0_local[(4)] = (output0_local[(4)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(8)]));
    output0_local[(8)] = (output0_local[(8)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(16)]));
    output0_local[(12)] = (output0_local[(12)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(24)]));
    output0_local[(16)] = (output0_local[(16)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(32)]));
    output0_local[(20)] = (output0_local[(20)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(40)]));
    output0_local[(24)] = (output0_local[(24)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(48)]));
    output0_local[(28)] = (output0_local[(28)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(56)]));
    output0_local[(32)] = (output0_local[(32)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(64)]));
    output0_local[(36)] = (output0_local[(36)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(72)]));
    output0_local[(40)] = (output0_local[(40)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(80)]));
    output0_local[(44)] = (output0_local[(44)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(88)]));
    output0_local[(48)] = (output0_local[(48)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(96)]));
    output0_local[(52)] = (output0_local[(52)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(104)]));
    output0_local[(56)] = (output0_local[(56)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(112)]));
    output0_local[(60)] = (output0_local[(60)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(120)]));
    output0_local[(64)] = (output0_local[(64)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(128)]));
    output0_local[(68)] = (output0_local[(68)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(136)]));
    output0_local[(72)] = (output0_local[(72)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(144)]));
    output0_local[(76)] = (output0_local[(76)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(152)]));
    output0_local[(1)] = (output0_local[(1)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(4)]));
    output0_local[(5)] = (output0_local[(5)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(12)]));
    output0_local[(9)] = (output0_local[(9)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(20)]));
    output0_local[(13)] = (output0_local[(13)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(28)]));
    output0_local[(17)] = (output0_local[(17)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(36)]));
    output0_local[(21)] = (output0_local[(21)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(44)]));
    output0_local[(25)] = (output0_local[(25)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(52)]));
    output0_local[(29)] = (output0_local[(29)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(60)]));
    output0_local[(33)] = (output0_local[(33)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(68)]));
    output0_local[(37)] = (output0_local[(37)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(76)]));
    output0_local[(41)] = (output0_local[(41)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(84)]));
    output0_local[(45)] = (output0_local[(45)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(92)]));
    output0_local[(49)] = (output0_local[(49)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(100)]));
    output0_local[(53)] = (output0_local[(53)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(108)]));
    output0_local[(57)] = (output0_local[(57)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(116)]));
    output0_local[(61)] = (output0_local[(61)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(124)]));
    output0_local[(65)] = (output0_local[(65)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(132)]));
    output0_local[(69)] = (output0_local[(69)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(140)]));
    output0_local[(73)] = (output0_local[(73)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(148)]));
    output0_local[(77)] = (output0_local[(77)] + (mediate2_shared[((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)))] * input2_shared[(156)]));
    output0_local[(2)] = (output0_local[(2)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(0)]));
    output0_local[(6)] = (output0_local[(6)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(8)]));
    output0_local[(10)] = (output0_local[(10)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(16)]));
    output0_local[(14)] = (output0_local[(14)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(24)]));
    output0_local[(18)] = (output0_local[(18)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(32)]));
    output0_local[(22)] = (output0_local[(22)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(40)]));
    output0_local[(26)] = (output0_local[(26)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(48)]));
    output0_local[(30)] = (output0_local[(30)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(56)]));
    output0_local[(34)] = (output0_local[(34)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(64)]));
    output0_local[(38)] = (output0_local[(38)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(72)]));
    output0_local[(42)] = (output0_local[(42)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(80)]));
    output0_local[(46)] = (output0_local[(46)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(88)]));
    output0_local[(50)] = (output0_local[(50)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(96)]));
    output0_local[(54)] = (output0_local[(54)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(104)]));
    output0_local[(58)] = (output0_local[(58)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(112)]));
    output0_local[(62)] = (output0_local[(62)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(120)]));
    output0_local[(66)] = (output0_local[(66)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(128)]));
    output0_local[(70)] = (output0_local[(70)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(136)]));
    output0_local[(74)] = (output0_local[(74)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(144)]));
    output0_local[(78)] = (output0_local[(78)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(152)]));
    output0_local[(3)] = (output0_local[(3)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(4)]));
    output0_local[(7)] = (output0_local[(7)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(12)]));
    output0_local[(11)] = (output0_local[(11)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(20)]));
    output0_local[(15)] = (output0_local[(15)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(28)]));
    output0_local[(19)] = (output0_local[(19)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(36)]));
    output0_local[(23)] = (output0_local[(23)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(44)]));
    output0_local[(27)] = (output0_local[(27)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(52)]));
    output0_local[(31)] = (output0_local[(31)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(60)]));
    output0_local[(35)] = (output0_local[(35)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(68)]));
    output0_local[(39)] = (output0_local[(39)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(76)]));
    output0_local[(43)] = (output0_local[(43)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(84)]));
    output0_local[(47)] = (output0_local[(47)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(92)]));
    output0_local[(51)] = (output0_local[(51)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(100)]));
    output0_local[(55)] = (output0_local[(55)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(108)]));
    output0_local[(59)] = (output0_local[(59)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(116)]));
    output0_local[(63)] = (output0_local[(63)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(124)]));
    output0_local[(67)] = (output0_local[(67)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(132)]));
    output0_local[(71)] = (output0_local[(71)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(140)]));
    output0_local[(75)] = (output0_local[(75)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(148)]));
    output0_local[(79)] = (output0_local[(79)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 28))] * input2_shared[(156)]));
    output0_local[(0)] = (output0_local[(0)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(1)]));
    output0_local[(4)] = (output0_local[(4)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(9)]));
    output0_local[(8)] = (output0_local[(8)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(17)]));
    output0_local[(12)] = (output0_local[(12)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(25)]));
    output0_local[(16)] = (output0_local[(16)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(33)]));
    output0_local[(20)] = (output0_local[(20)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(41)]));
    output0_local[(24)] = (output0_local[(24)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(49)]));
    output0_local[(28)] = (output0_local[(28)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(57)]));
    output0_local[(32)] = (output0_local[(32)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(65)]));
    output0_local[(36)] = (output0_local[(36)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(73)]));
    output0_local[(40)] = (output0_local[(40)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(81)]));
    output0_local[(44)] = (output0_local[(44)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(89)]));
    output0_local[(48)] = (output0_local[(48)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(97)]));
    output0_local[(52)] = (output0_local[(52)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(105)]));
    output0_local[(56)] = (output0_local[(56)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(113)]));
    output0_local[(60)] = (output0_local[(60)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(121)]));
    output0_local[(64)] = (output0_local[(64)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(129)]));
    output0_local[(68)] = (output0_local[(68)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(137)]));
    output0_local[(72)] = (output0_local[(72)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(145)]));
    output0_local[(76)] = (output0_local[(76)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(153)]));
    output0_local[(1)] = (output0_local[(1)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(5)]));
    output0_local[(5)] = (output0_local[(5)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(13)]));
    output0_local[(9)] = (output0_local[(9)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(21)]));
    output0_local[(13)] = (output0_local[(13)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(29)]));
    output0_local[(17)] = (output0_local[(17)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(37)]));
    output0_local[(21)] = (output0_local[(21)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(45)]));
    output0_local[(25)] = (output0_local[(25)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(53)]));
    output0_local[(29)] = (output0_local[(29)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(61)]));
    output0_local[(33)] = (output0_local[(33)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(69)]));
    output0_local[(37)] = (output0_local[(37)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(77)]));
    output0_local[(41)] = (output0_local[(41)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(85)]));
    output0_local[(45)] = (output0_local[(45)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(93)]));
    output0_local[(49)] = (output0_local[(49)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(101)]));
    output0_local[(53)] = (output0_local[(53)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(109)]));
    output0_local[(57)] = (output0_local[(57)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(117)]));
    output0_local[(61)] = (output0_local[(61)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(125)]));
    output0_local[(65)] = (output0_local[(65)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(133)]));
    output0_local[(69)] = (output0_local[(69)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(141)]));
    output0_local[(73)] = (output0_local[(73)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(149)]));
    output0_local[(77)] = (output0_local[(77)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 7))] * input2_shared[(157)]));
    output0_local[(2)] = (output0_local[(2)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(1)]));
    output0_local[(6)] = (output0_local[(6)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(9)]));
    output0_local[(10)] = (output0_local[(10)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(17)]));
    output0_local[(14)] = (output0_local[(14)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(25)]));
    output0_local[(18)] = (output0_local[(18)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(33)]));
    output0_local[(22)] = (output0_local[(22)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(41)]));
    output0_local[(26)] = (output0_local[(26)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(49)]));
    output0_local[(30)] = (output0_local[(30)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(57)]));
    output0_local[(34)] = (output0_local[(34)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(65)]));
    output0_local[(38)] = (output0_local[(38)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(73)]));
    output0_local[(42)] = (output0_local[(42)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(81)]));
    output0_local[(46)] = (output0_local[(46)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(89)]));
    output0_local[(50)] = (output0_local[(50)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(97)]));
    output0_local[(54)] = (output0_local[(54)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(105)]));
    output0_local[(58)] = (output0_local[(58)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(113)]));
    output0_local[(62)] = (output0_local[(62)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(121)]));
    output0_local[(66)] = (output0_local[(66)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(129)]));
    output0_local[(70)] = (output0_local[(70)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(137)]));
    output0_local[(74)] = (output0_local[(74)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(145)]));
    output0_local[(78)] = (output0_local[(78)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(153)]));
    output0_local[(3)] = (output0_local[(3)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(5)]));
    output0_local[(7)] = (output0_local[(7)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(13)]));
    output0_local[(11)] = (output0_local[(11)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(21)]));
    output0_local[(15)] = (output0_local[(15)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(29)]));
    output0_local[(19)] = (output0_local[(19)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(37)]));
    output0_local[(23)] = (output0_local[(23)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(45)]));
    output0_local[(27)] = (output0_local[(27)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(53)]));
    output0_local[(31)] = (output0_local[(31)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(61)]));
    output0_local[(35)] = (output0_local[(35)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(69)]));
    output0_local[(39)] = (output0_local[(39)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(77)]));
    output0_local[(43)] = (output0_local[(43)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(85)]));
    output0_local[(47)] = (output0_local[(47)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(93)]));
    output0_local[(51)] = (output0_local[(51)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(101)]));
    output0_local[(55)] = (output0_local[(55)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(109)]));
    output0_local[(59)] = (output0_local[(59)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(117)]));
    output0_local[(63)] = (output0_local[(63)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(125)]));
    output0_local[(67)] = (output0_local[(67)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(133)]));
    output0_local[(71)] = (output0_local[(71)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(141)]));
    output0_local[(75)] = (output0_local[(75)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(149)]));
    output0_local[(79)] = (output0_local[(79)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 35))] * input2_shared[(157)]));
    output0_local[(0)] = (output0_local[(0)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(2)]));
    output0_local[(4)] = (output0_local[(4)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(10)]));
    output0_local[(8)] = (output0_local[(8)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(18)]));
    output0_local[(12)] = (output0_local[(12)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(26)]));
    output0_local[(16)] = (output0_local[(16)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(34)]));
    output0_local[(20)] = (output0_local[(20)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(42)]));
    output0_local[(24)] = (output0_local[(24)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(50)]));
    output0_local[(28)] = (output0_local[(28)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(58)]));
    output0_local[(32)] = (output0_local[(32)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(66)]));
    output0_local[(36)] = (output0_local[(36)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(74)]));
    output0_local[(40)] = (output0_local[(40)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(82)]));
    output0_local[(44)] = (output0_local[(44)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(90)]));
    output0_local[(48)] = (output0_local[(48)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(98)]));
    output0_local[(52)] = (output0_local[(52)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(106)]));
    output0_local[(56)] = (output0_local[(56)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(114)]));
    output0_local[(60)] = (output0_local[(60)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(122)]));
    output0_local[(64)] = (output0_local[(64)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(130)]));
    output0_local[(68)] = (output0_local[(68)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(138)]));
    output0_local[(72)] = (output0_local[(72)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(146)]));
    output0_local[(76)] = (output0_local[(76)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(154)]));
    output0_local[(1)] = (output0_local[(1)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(6)]));
    output0_local[(5)] = (output0_local[(5)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(14)]));
    output0_local[(9)] = (output0_local[(9)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(22)]));
    output0_local[(13)] = (output0_local[(13)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(30)]));
    output0_local[(17)] = (output0_local[(17)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(38)]));
    output0_local[(21)] = (output0_local[(21)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(46)]));
    output0_local[(25)] = (output0_local[(25)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(54)]));
    output0_local[(29)] = (output0_local[(29)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(62)]));
    output0_local[(33)] = (output0_local[(33)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(70)]));
    output0_local[(37)] = (output0_local[(37)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(78)]));
    output0_local[(41)] = (output0_local[(41)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(86)]));
    output0_local[(45)] = (output0_local[(45)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(94)]));
    output0_local[(49)] = (output0_local[(49)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(102)]));
    output0_local[(53)] = (output0_local[(53)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(110)]));
    output0_local[(57)] = (output0_local[(57)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(118)]));
    output0_local[(61)] = (output0_local[(61)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(126)]));
    output0_local[(65)] = (output0_local[(65)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(134)]));
    output0_local[(69)] = (output0_local[(69)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(142)]));
    output0_local[(73)] = (output0_local[(73)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(150)]));
    output0_local[(77)] = (output0_local[(77)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 14))] * input2_shared[(158)]));
    output0_local[(2)] = (output0_local[(2)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(2)]));
    output0_local[(6)] = (output0_local[(6)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(10)]));
    output0_local[(10)] = (output0_local[(10)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(18)]));
    output0_local[(14)] = (output0_local[(14)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(26)]));
    output0_local[(18)] = (output0_local[(18)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(34)]));
    output0_local[(22)] = (output0_local[(22)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(42)]));
    output0_local[(26)] = (output0_local[(26)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(50)]));
    output0_local[(30)] = (output0_local[(30)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(58)]));
    output0_local[(34)] = (output0_local[(34)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(66)]));
    output0_local[(38)] = (output0_local[(38)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(74)]));
    output0_local[(42)] = (output0_local[(42)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(82)]));
    output0_local[(46)] = (output0_local[(46)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(90)]));
    output0_local[(50)] = (output0_local[(50)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(98)]));
    output0_local[(54)] = (output0_local[(54)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(106)]));
    output0_local[(58)] = (output0_local[(58)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(114)]));
    output0_local[(62)] = (output0_local[(62)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(122)]));
    output0_local[(66)] = (output0_local[(66)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(130)]));
    output0_local[(70)] = (output0_local[(70)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(138)]));
    output0_local[(74)] = (output0_local[(74)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(146)]));
    output0_local[(78)] = (output0_local[(78)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(154)]));
    output0_local[(3)] = (output0_local[(3)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(6)]));
    output0_local[(7)] = (output0_local[(7)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(14)]));
    output0_local[(11)] = (output0_local[(11)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(22)]));
    output0_local[(15)] = (output0_local[(15)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(30)]));
    output0_local[(19)] = (output0_local[(19)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(38)]));
    output0_local[(23)] = (output0_local[(23)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(46)]));
    output0_local[(27)] = (output0_local[(27)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(54)]));
    output0_local[(31)] = (output0_local[(31)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(62)]));
    output0_local[(35)] = (output0_local[(35)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(70)]));
    output0_local[(39)] = (output0_local[(39)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(78)]));
    output0_local[(43)] = (output0_local[(43)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(86)]));
    output0_local[(47)] = (output0_local[(47)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(94)]));
    output0_local[(51)] = (output0_local[(51)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(102)]));
    output0_local[(55)] = (output0_local[(55)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(110)]));
    output0_local[(59)] = (output0_local[(59)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(118)]));
    output0_local[(63)] = (output0_local[(63)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(126)]));
    output0_local[(67)] = (output0_local[(67)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(134)]));
    output0_local[(71)] = (output0_local[(71)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(142)]));
    output0_local[(75)] = (output0_local[(75)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(150)]));
    output0_local[(79)] = (output0_local[(79)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 42))] * input2_shared[(158)]));
    output0_local[(0)] = (output0_local[(0)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(3)]));
    output0_local[(4)] = (output0_local[(4)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(11)]));
    output0_local[(8)] = (output0_local[(8)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(19)]));
    output0_local[(12)] = (output0_local[(12)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(27)]));
    output0_local[(16)] = (output0_local[(16)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(35)]));
    output0_local[(20)] = (output0_local[(20)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(43)]));
    output0_local[(24)] = (output0_local[(24)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(51)]));
    output0_local[(28)] = (output0_local[(28)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(59)]));
    output0_local[(32)] = (output0_local[(32)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(67)]));
    output0_local[(36)] = (output0_local[(36)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(75)]));
    output0_local[(40)] = (output0_local[(40)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(83)]));
    output0_local[(44)] = (output0_local[(44)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(91)]));
    output0_local[(48)] = (output0_local[(48)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(99)]));
    output0_local[(52)] = (output0_local[(52)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(107)]));
    output0_local[(56)] = (output0_local[(56)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(115)]));
    output0_local[(60)] = (output0_local[(60)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(123)]));
    output0_local[(64)] = (output0_local[(64)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(131)]));
    output0_local[(68)] = (output0_local[(68)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(139)]));
    output0_local[(72)] = (output0_local[(72)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(147)]));
    output0_local[(76)] = (output0_local[(76)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(155)]));
    output0_local[(1)] = (output0_local[(1)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(7)]));
    output0_local[(5)] = (output0_local[(5)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(15)]));
    output0_local[(9)] = (output0_local[(9)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(23)]));
    output0_local[(13)] = (output0_local[(13)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(31)]));
    output0_local[(17)] = (output0_local[(17)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(39)]));
    output0_local[(21)] = (output0_local[(21)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(47)]));
    output0_local[(25)] = (output0_local[(25)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(55)]));
    output0_local[(29)] = (output0_local[(29)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(63)]));
    output0_local[(33)] = (output0_local[(33)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(71)]));
    output0_local[(37)] = (output0_local[(37)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(79)]));
    output0_local[(41)] = (output0_local[(41)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(87)]));
    output0_local[(45)] = (output0_local[(45)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(95)]));
    output0_local[(49)] = (output0_local[(49)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(103)]));
    output0_local[(53)] = (output0_local[(53)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(111)]));
    output0_local[(57)] = (output0_local[(57)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(119)]));
    output0_local[(61)] = (output0_local[(61)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(127)]));
    output0_local[(65)] = (output0_local[(65)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(135)]));
    output0_local[(69)] = (output0_local[(69)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(143)]));
    output0_local[(73)] = (output0_local[(73)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(151)]));
    output0_local[(77)] = (output0_local[(77)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 21))] * input2_shared[(159)]));
    output0_local[(2)] = (output0_local[(2)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(3)]));
    output0_local[(6)] = (output0_local[(6)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(11)]));
    output0_local[(10)] = (output0_local[(10)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(19)]));
    output0_local[(14)] = (output0_local[(14)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(27)]));
    output0_local[(18)] = (output0_local[(18)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(35)]));
    output0_local[(22)] = (output0_local[(22)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(43)]));
    output0_local[(26)] = (output0_local[(26)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(51)]));
    output0_local[(30)] = (output0_local[(30)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(59)]));
    output0_local[(34)] = (output0_local[(34)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(67)]));
    output0_local[(38)] = (output0_local[(38)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(75)]));
    output0_local[(42)] = (output0_local[(42)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(83)]));
    output0_local[(46)] = (output0_local[(46)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(91)]));
    output0_local[(50)] = (output0_local[(50)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(99)]));
    output0_local[(54)] = (output0_local[(54)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(107)]));
    output0_local[(58)] = (output0_local[(58)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(115)]));
    output0_local[(62)] = (output0_local[(62)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(123)]));
    output0_local[(66)] = (output0_local[(66)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(131)]));
    output0_local[(70)] = (output0_local[(70)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(139)]));
    output0_local[(74)] = (output0_local[(74)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(147)]));
    output0_local[(78)] = (output0_local[(78)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(155)]));
    output0_local[(3)] = (output0_local[(3)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(7)]));
    output0_local[(7)] = (output0_local[(7)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(15)]));
    output0_local[(11)] = (output0_local[(11)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(23)]));
    output0_local[(15)] = (output0_local[(15)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(31)]));
    output0_local[(19)] = (output0_local[(19)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(39)]));
    output0_local[(23)] = (output0_local[(23)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(47)]));
    output0_local[(27)] = (output0_local[(27)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(55)]));
    output0_local[(31)] = (output0_local[(31)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(63)]));
    output0_local[(35)] = (output0_local[(35)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(71)]));
    output0_local[(39)] = (output0_local[(39)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(79)]));
    output0_local[(43)] = (output0_local[(43)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(87)]));
    output0_local[(47)] = (output0_local[(47)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(95)]));
    output0_local[(51)] = (output0_local[(51)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(103)]));
    output0_local[(55)] = (output0_local[(55)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(111)]));
    output0_local[(59)] = (output0_local[(59)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(119)]));
    output0_local[(63)] = (output0_local[(63)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(127)]));
    output0_local[(67)] = (output0_local[(67)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(135)]));
    output0_local[(71)] = (output0_local[(71)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(143)]));
    output0_local[(75)] = (output0_local[(75)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(151)]));
    output0_local[(79)] = (output0_local[(79)] + (mediate2_shared[(((((((int)threadIdx.x) / 7) * 56) + (((int)threadIdx.x) % 7)) + 49))] * input2_shared[(159)]));
  }
  for (int N_inner = 0; N_inner < 2; ++N_inner) {
    for (int F_inner = 0; F_inner < 2; ++F_inner) {
      for (int vthread_s = 0; vthread_s < 20; ++vthread_s) {
        output0[((((((((((((int)blockIdx.x) / 77) * 172480) + ((((int)threadIdx.x) / 7) * 43120)) + (N_inner * 21560)) + (((((int)blockIdx.x) % 77) / 7) * 1960)) + (vthread_s * 98)) + (F_inner * 49)) + ((((int)blockIdx.x) % 7) * 7)) + (((int)threadIdx.x) % 7)))] = output0_local[((((vthread_s * 4) + (N_inner * 2)) + F_inner))];
      }
    }
  }
}

// Saved Perf = 6.136970e-05 sec / run; Step Produced = 1000; Planned Steps = 1000;
// Antares Tuning Completed in 1000 steps.
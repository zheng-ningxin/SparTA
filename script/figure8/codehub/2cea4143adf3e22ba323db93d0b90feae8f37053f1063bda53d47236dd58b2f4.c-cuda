// GLOBALS: input0:float32[128, 8, 128], input1:float32[32, 128, 49] -> output0:float32[32, 8, 50]
// BACKEND: c-cuda (default)
// CONFIG: {"Toutput0:D0": [-1, 1, 8, 1], "Toutput0:D1": [-1, 1, 1, 1], "Toutput0:D2": [-1, 1, 10, 1], "Toutput0:R0": [-1, 1, 8], "Toutput0:R1": [-1, 1, 8], "Toutput0:RA": 1, "Toutput0:S": 3, "Toutput0:U": 1}
// COMPUTE_V1: - einstein_v2(" mediate0[N0, N1, N2] = input0[N0 + 8, N1 + 0, N2 + 0] where N0 in 8 , N1 in 8 , N2 in 128;  mediate1[N0, N1, N2] = input1[N0 + 0, N1 + 8, N2 + 0] where N0 in 32 , N1 in 8 , N2 in 49;  output0[N, F, WO] +=! mediate1[N, C, -64 + KW + WO * 1].when([-64 + KW + WO * 1 >= 0, -64 + KW + WO * 1 < 49], const(0.0).cast(mediate1[N, C, -64 + KW + WO * 1].dtype())) * mediate0[F, C, KW] where WO in 50; ", input_dict={ "input0" : { "dtype" : "float32", "shape" : [128, 8, 128]} ,  "input1" : { "dtype" : "float32", "shape" : [32, 128, 49]} }) ## @:


// ---------------------------------------------------------------------------
// LOCAL: template_op_kernel0 -- input0:float32[128, 8, 128], input1:float32[32, 128, 49] -> output0:float32[32, 8, 50]

#include <cuda_runtime.h>
#include <cuda_fp16.h>
#include <mma.h>

#ifndef __CUDA_COMMON_MACRO__
#define __CUDA_COMMON_MACRO__

#define __ITEM_0_OF__(v) (v).x
#define __ITEM_1_OF__(v) (v).y
#define __ITEM_2_OF__(v) (v).z
#define __ITEM_3_OF__(v) (v).w

#define __STORE_ITEM_0__(t, out, ido, in, idi) *(t*)(out + ido) = *(t*)(in + idi)
#define __STORE_ITEM_1__(t, out, ido, in, idi)
#define __STORE_ITEM_2__(t, out, ido, in, idi)
#define __STORE_ITEM_3__(t, out, ido, in, idi)

#define MAKE_VEC4_OP(type) \
  __forceinline__ __device__ type operator+(const type &l, const type &r) { return make_##type(l.x + r.x, l.y + r.y, l.z + r.z, l.w + r.w); } \
  __forceinline__ __device__ type operator-(const type &l, const type &r) { return make_##type(l.x - r.x, l.y - r.y, l.z - r.z, l.w - r.w); } \
  __forceinline__ __device__ type operator*(const type &l, const type &r) { return make_##type(l.x * r.x, l.y * r.y, l.z * r.z, l.w * r.w); } \
  __forceinline__ __device__ type operator/(const type &l, const type &r) { return make_##type(l.x / r.x, l.y / r.y, l.z / r.z, l.w / r.w); } \
  __forceinline__ __device__ type operator%(const type &l, const type &r) { return make_##type(l.x % r.x, l.y % r.y, l.z % r.z, l.w % r.w); }
#define MAKE_VEC2_OP(type) \
  __forceinline__ __device__ type operator+(const type &l, const type &r) { return make_##type(l.x + r.x, l.y + r.y); } \
  __forceinline__ __device__ type operator-(const type &l, const type &r) { return make_##type(l.x - r.x, l.y - r.y); } \
  __forceinline__ __device__ type operator*(const type &l, const type &r) { return make_##type(l.x * r.x, l.y * r.y); } \
  __forceinline__ __device__ type operator/(const type &l, const type &r) { return make_##type(l.x / r.x, l.y / r.y); } \
  __forceinline__ __device__ type operator%(const type &l, const type &r) { return make_##type(l.x % r.x, l.y % r.y); }

MAKE_VEC4_OP(int4)
MAKE_VEC2_OP(int2)

__forceinline__ __device__ __half max(const __half a, const __half b) { return a > b ? a : b; }
__forceinline__ __device__ __half min(const __half a, const __half b) { return a < b ? a : b; }

#endif


extern "C" __global__ __launch_bounds__(80) void template_op_kernel0(float* __restrict__ input0, float* __restrict__ input1, float* __restrict__ output0) {
  // [thread_extent] blockIdx.x = 160
  // [thread_extent] threadIdx.x = 80
  float output0_local[1];
  output0_local[(0)] = 0.000000e+00f;
  __shared__ float mediate1_shared[3136];
  // [thread_extent] threadIdx.x = 80
  mediate1_shared[(((int)threadIdx.x))] = input1[(((((((int)blockIdx.x) / 40) * 50176) + ((int)threadIdx.x)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 80))] = input1[(((((((int)blockIdx.x) / 40) * 50176) + ((int)threadIdx.x)) + 472))];
  mediate1_shared[((((int)threadIdx.x) + 160))] = input1[(((((((int)blockIdx.x) / 40) * 50176) + ((int)threadIdx.x)) + 552))];
  mediate1_shared[((((int)threadIdx.x) + 240))] = input1[(((((((int)blockIdx.x) / 40) * 50176) + ((int)threadIdx.x)) + 632))];
  mediate1_shared[((((int)threadIdx.x) + 320))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 320) / 392) * 6272)) + ((((int)threadIdx.x) + 320) % 392)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 400))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 400) / 392) * 6272)) + (((int)threadIdx.x) + 8)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 480))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 480) / 392) * 6272)) + (((int)threadIdx.x) + 88)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 560))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 560) / 392) * 6272)) + (((int)threadIdx.x) + 168)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 640))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 640) / 392) * 6272)) + (((int)threadIdx.x) + 248)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 720))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 720) / 392) * 6272)) + ((((int)threadIdx.x) + 328) % 392)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 800))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 800) / 392) * 6272)) + (((int)threadIdx.x) + 16)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 880))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 880) / 392) * 6272)) + (((int)threadIdx.x) + 96)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 960))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 960) / 392) * 6272)) + (((int)threadIdx.x) + 176)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 1040))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 1040) / 392) * 6272)) + (((int)threadIdx.x) + 256)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 1120))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 1120) / 392) * 6272)) + ((((int)threadIdx.x) + 336) % 392)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 1200))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 1200) / 392) * 6272)) + (((int)threadIdx.x) + 24)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 1280))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 1280) / 392) * 6272)) + (((int)threadIdx.x) + 104)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 1360))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 1360) / 392) * 6272)) + (((int)threadIdx.x) + 184)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 1440))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 1440) / 392) * 6272)) + (((int)threadIdx.x) + 264)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 1520))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 1520) / 392) * 6272)) + ((((int)threadIdx.x) + 344) % 392)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 1600))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 1600) / 392) * 6272)) + (((int)threadIdx.x) + 32)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 1680))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 1680) / 392) * 6272)) + (((int)threadIdx.x) + 112)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 1760))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 1760) / 392) * 6272)) + (((int)threadIdx.x) + 192)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 1840))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 1840) / 392) * 6272)) + (((int)threadIdx.x) + 272)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 1920))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 1920) / 392) * 6272)) + ((((int)threadIdx.x) + 352) % 392)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 2000))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 2000) / 392) * 6272)) + (((int)threadIdx.x) + 40)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 2080))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 2080) / 392) * 6272)) + (((int)threadIdx.x) + 120)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 2160))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 2160) / 392) * 6272)) + (((int)threadIdx.x) + 200)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 2240))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 2240) / 392) * 6272)) + (((int)threadIdx.x) + 280)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 2320))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 2320) / 392) * 6272)) + ((((int)threadIdx.x) + 360) % 392)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 2400))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 2400) / 392) * 6272)) + (((int)threadIdx.x) + 48)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 2480))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 2480) / 392) * 6272)) + (((int)threadIdx.x) + 128)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 2560))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 2560) / 392) * 6272)) + (((int)threadIdx.x) + 208)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 2640))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 2640) / 392) * 6272)) + (((int)threadIdx.x) + 288)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 2720))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 2720) / 392) * 6272)) + ((((int)threadIdx.x) + 368) % 392)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 2800))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 2800) / 392) * 6272)) + (((int)threadIdx.x) + 56)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 2880))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 2880) / 392) * 6272)) + (((int)threadIdx.x) + 136)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 2960))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 2960) / 392) * 6272)) + (((int)threadIdx.x) + 216)) + 392))];
  mediate1_shared[((((int)threadIdx.x) + 3040))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 3040) / 392) * 6272)) + (((int)threadIdx.x) + 296)) + 392))];
  if (((int)threadIdx.x) < 16) {
    mediate1_shared[((((int)threadIdx.x) + 3120))] = input1[((((((((int)blockIdx.x) / 40) * 50176) + (((((int)threadIdx.x) + 3120) / 392) * 6272)) + (((int)threadIdx.x) + 376)) + 392))];
  }
  __shared__ float mediate0_shared[1024];
  // [thread_extent] threadIdx.x = 80
  mediate0_shared[(((int)threadIdx.x))] = input0[((((((((int)blockIdx.x) % 40) / 5) * 1024) + ((int)threadIdx.x)) + 8192))];
  mediate0_shared[((((int)threadIdx.x) + 80))] = input0[((((((((int)blockIdx.x) % 40) / 5) * 1024) + ((int)threadIdx.x)) + 8272))];
  mediate0_shared[((((int)threadIdx.x) + 160))] = input0[((((((((int)blockIdx.x) % 40) / 5) * 1024) + ((int)threadIdx.x)) + 8352))];
  mediate0_shared[((((int)threadIdx.x) + 240))] = input0[((((((((int)blockIdx.x) % 40) / 5) * 1024) + ((int)threadIdx.x)) + 8432))];
  mediate0_shared[((((int)threadIdx.x) + 320))] = input0[((((((((int)blockIdx.x) % 40) / 5) * 1024) + ((int)threadIdx.x)) + 8512))];
  mediate0_shared[((((int)threadIdx.x) + 400))] = input0[((((((((int)blockIdx.x) % 40) / 5) * 1024) + ((int)threadIdx.x)) + 8592))];
  mediate0_shared[((((int)threadIdx.x) + 480))] = input0[((((((((int)blockIdx.x) % 40) / 5) * 1024) + ((int)threadIdx.x)) + 8672))];
  mediate0_shared[((((int)threadIdx.x) + 560))] = input0[((((((((int)blockIdx.x) % 40) / 5) * 1024) + ((int)threadIdx.x)) + 8752))];
  mediate0_shared[((((int)threadIdx.x) + 640))] = input0[((((((((int)blockIdx.x) % 40) / 5) * 1024) + ((int)threadIdx.x)) + 8832))];
  mediate0_shared[((((int)threadIdx.x) + 720))] = input0[((((((((int)blockIdx.x) % 40) / 5) * 1024) + ((int)threadIdx.x)) + 8912))];
  mediate0_shared[((((int)threadIdx.x) + 800))] = input0[((((((((int)blockIdx.x) % 40) / 5) * 1024) + ((int)threadIdx.x)) + 8992))];
  mediate0_shared[((((int)threadIdx.x) + 880))] = input0[((((((((int)blockIdx.x) % 40) / 5) * 1024) + ((int)threadIdx.x)) + 9072))];
  if (((int)threadIdx.x) < 64) {
    mediate0_shared[((((int)threadIdx.x) + 960))] = input0[((((((((int)blockIdx.x) % 40) / 5) * 1024) + ((int)threadIdx.x)) + 9152))];
  }
  __syncthreads();
  for (int C_inner = 0; C_inner < 8; ++C_inner) {
    output0_local[(0)] = (output0_local[(0)] + (((49 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 49))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 15))]));
    output0_local[(0)] = (output0_local[(0)] + (((48 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 48))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 16))]));
    output0_local[(0)] = (output0_local[(0)] + (((47 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 47))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 17))]));
    output0_local[(0)] = (output0_local[(0)] + (((46 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 46))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 18))]));
    output0_local[(0)] = (output0_local[(0)] + (((45 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 45))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 19))]));
    output0_local[(0)] = (output0_local[(0)] + (((44 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 44))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 20))]));
    output0_local[(0)] = (output0_local[(0)] + (((43 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 43))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 21))]));
    output0_local[(0)] = (output0_local[(0)] + (((42 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 42))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 22))]));
    output0_local[(0)] = (output0_local[(0)] + (((41 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 41))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 23))]));
    output0_local[(0)] = (output0_local[(0)] + (((40 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 40))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 24))]));
    output0_local[(0)] = (output0_local[(0)] + (((39 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 39))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 25))]));
    output0_local[(0)] = (output0_local[(0)] + (((38 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 38))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 26))]));
    output0_local[(0)] = (output0_local[(0)] + (((37 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 37))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 27))]));
    output0_local[(0)] = (output0_local[(0)] + (((36 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 36))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 28))]));
    output0_local[(0)] = (output0_local[(0)] + (((35 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 35))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 29))]));
    output0_local[(0)] = (output0_local[(0)] + (((34 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 34))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 30))]));
    output0_local[(0)] = (output0_local[(0)] + (((33 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 33))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 31))]));
    output0_local[(0)] = (output0_local[(0)] + (((32 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 32))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 32))]));
    output0_local[(0)] = (output0_local[(0)] + (((31 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 31))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 33))]));
    output0_local[(0)] = (output0_local[(0)] + (((30 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 30))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 34))]));
    output0_local[(0)] = (output0_local[(0)] + (((29 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 29))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 35))]));
    output0_local[(0)] = (output0_local[(0)] + (((28 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 28))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 36))]));
    output0_local[(0)] = (output0_local[(0)] + (((27 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 27))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 37))]));
    output0_local[(0)] = (output0_local[(0)] + (((26 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 26))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 38))]));
    output0_local[(0)] = (output0_local[(0)] + (((25 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 25))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 39))]));
    output0_local[(0)] = (output0_local[(0)] + (((24 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 24))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 40))]));
    output0_local[(0)] = (output0_local[(0)] + (((23 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 23))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 41))]));
    output0_local[(0)] = (output0_local[(0)] + (((22 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 22))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 42))]));
    output0_local[(0)] = (output0_local[(0)] + (((21 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 21))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 43))]));
    output0_local[(0)] = (output0_local[(0)] + (((20 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 20))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 44))]));
    output0_local[(0)] = (output0_local[(0)] + (((19 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 19))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 45))]));
    output0_local[(0)] = (output0_local[(0)] + (((18 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 18))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 46))]));
    output0_local[(0)] = (output0_local[(0)] + (((17 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 17))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 47))]));
    output0_local[(0)] = (output0_local[(0)] + (((16 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 16))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 48))]));
    output0_local[(0)] = (output0_local[(0)] + (((15 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 15))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 49))]));
    output0_local[(0)] = (output0_local[(0)] + (((14 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 14))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 50))]));
    output0_local[(0)] = (output0_local[(0)] + (((13 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 13))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 51))]));
    output0_local[(0)] = (output0_local[(0)] + (((12 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 12))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 52))]));
    output0_local[(0)] = (output0_local[(0)] + (((11 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 11))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 53))]));
    output0_local[(0)] = (output0_local[(0)] + (((10 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 10))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 54))]));
    output0_local[(0)] = (output0_local[(0)] + (((9 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 9))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 55))]));
    output0_local[(0)] = (output0_local[(0)] + (((8 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 8))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 56))]));
    output0_local[(0)] = (output0_local[(0)] + (((7 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 7))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 57))]));
    output0_local[(0)] = (output0_local[(0)] + (((6 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 6))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 58))]));
    output0_local[(0)] = (output0_local[(0)] + (((5 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 5))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 59))]));
    output0_local[(0)] = (output0_local[(0)] + (((4 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 4))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 60))]));
    output0_local[(0)] = (output0_local[(0)] + (((3 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 3))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 61))]));
    output0_local[(0)] = (output0_local[(0)] + (((2 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 2))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 62))]));
    output0_local[(0)] = (output0_local[(0)] + (((1 <= (((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10))) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) - 1))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 63))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 49) ? mediate1_shared[((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 64))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 48) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 1))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 65))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 47) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 2))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 66))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 46) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 3))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 67))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 45) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 4))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 68))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 44) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 5))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 69))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 43) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 6))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 70))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 42) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 7))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 71))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 41) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 8))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 72))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 40) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 9))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 73))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 39) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 10))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 74))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 38) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 11))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 75))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 37) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 12))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 76))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 36) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 13))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 77))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 35) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 14))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 78))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 34) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 15))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 79))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 33) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 16))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 80))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 32) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 17))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 81))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 31) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 18))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 82))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 30) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 19))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 83))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 29) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 20))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 84))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 28) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 21))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 85))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 27) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 22))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 86))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 26) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 23))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 87))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 25) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 24))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 88))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 24) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 25))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 89))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 23) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 26))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 90))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 22) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 27))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 91))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 21) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 28))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 92))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 20) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 29))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 93))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 19) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 30))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 94))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 18) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 31))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 95))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 17) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 32))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 96))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 16) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 33))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 97))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 15) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 34))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 98))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 14) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 35))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 99))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 13) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 36))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 100))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 12) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 37))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 101))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 11) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 38))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 102))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 10) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 39))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 103))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 9) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 40))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 104))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 8) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 41))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 105))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 7) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 42))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 106))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 6) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 43))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 107))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 5) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 44))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 108))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 4) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 45))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 109))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 3) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 46))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 110))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 2) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 47))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 111))]));
    output0_local[(0)] = (output0_local[(0)] + ((((((((int)blockIdx.x) % 5) * 10) + (((int)threadIdx.x) % 10)) < 1) ? mediate1_shared[(((((((((int)threadIdx.x) / 10) * 392) + (C_inner * 49)) + ((((int)blockIdx.x) % 5) * 10)) + (((int)threadIdx.x) % 10)) + 48))] : 0.000000e+00f) * mediate0_shared[(((C_inner * 128) + 112))]));
  }
  output0[((((((((int)blockIdx.x) / 40) * 3200) + ((((int)threadIdx.x) / 10) * 400)) + ((((int)blockIdx.x) % 40) * 10)) + (((int)threadIdx.x) % 10)))] = output0_local[(0)];
}

// Saved Perf = 1.801020e-05 sec / run; Step Produced = 489; Planned Steps = 1000;
// Antares Tuning Completed in 1000 steps.
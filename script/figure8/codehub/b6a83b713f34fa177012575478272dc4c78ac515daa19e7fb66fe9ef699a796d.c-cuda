// GLOBALS: input0:float32[228, 1, 3, 3], input1:float32[228], input2:float32[32, 228, 14, 14] -> output0:float32[32, 228, 14, 14]
// BACKEND: c-cuda (default)
// CONFIG: {"Toutput0:D0": [-1, 1, 1, 2], "Toutput0:D1": [-1, 1, 1, 1], "Toutput0:D2": [-1, 7, 2, 1], "Toutput0:D3": [-1, 1, 14, 1], "Toutput0:R0": [-1, 3, 1], "Toutput0:R1": [-1, 3, 1], "Toutput0:RA": 1, "Toutput0:S": 3, "Toutput0:U": 1}
// COMPUTE_V1: - einstein_v2(" mediate0[N2, N3, N0, N1] = input0[N0, N1, N2, N3] ;  mediate1[N0, N1, N2, N3] = input1[N1] where N0 in 32, N2 in 14, N3 in 14;   mediate2[N0, N1, N2, N3] = input2[N0, N1, N2, N3] + mediate1[N0, N1, N2, N3]; mediate3[N0, N1, N2, N3] = mediate2[N0, N1, N2, N3].call(`max`, [const(0).cast(mediate2[N0, N1, N2, N3].dtype())]); output0[N, C, HO, WO] +=! mediate3[N, C, -1 + KH + HO * 1, -1 + KW + WO * 1].when([-1 + KH + HO * 1 >= 0, -1 + KH + HO * 1 < 14, -1 + KW + WO * 1 >= 0, -1 + KW + WO * 1 < 14], const(0.0).cast(mediate3[N, C, -1 + KH + HO * 1, -1 + KW + WO * 1].dtype())) * mediate0[KH, KW, C, 0] where HO in 14, WO in 14, KH in 3, KW in 3; ", input_dict={ "input0" : { "dtype" : "float32", "shape" : [228, 1, 3, 3]} ,  "input1" : { "dtype" : "float32", "shape" : [228]} ,  "input2" : { "dtype" : "float32", "shape" : [32, 228, 14, 14]} }) ## @:  memcpy


// ---------------------------------------------------------------------------
// LOCAL: template_op_kernel0 -- input0:float32[228, 1, 3, 3], input1:float32[228], input2:float32[32, 228, 14, 14] -> output0:float32[32, 228, 14, 14]

#include <cuda_runtime.h>
#include <cuda_fp16.h>
#include <mma.h>

#ifndef __CUDA_COMMON_MACRO__
#define __CUDA_COMMON_MACRO__

#define __ITEM_0_OF__(v) (v).x
#define __ITEM_1_OF__(v) (v).y
#define __ITEM_2_OF__(v) (v).z
#define __ITEM_3_OF__(v) (v).w

#define __STORE_ITEM_0__(t, out, ido, in, idi) *(t*)(out + ido) = *(t*)(in + idi)
#define __STORE_ITEM_1__(t, out, ido, in, idi)
#define __STORE_ITEM_2__(t, out, ido, in, idi)
#define __STORE_ITEM_3__(t, out, ido, in, idi)

#define MAKE_VEC4_OP(type) \
  __forceinline__ __device__ type operator+(const type &l, const type &r) { return make_##type(l.x + r.x, l.y + r.y, l.z + r.z, l.w + r.w); } \
  __forceinline__ __device__ type operator-(const type &l, const type &r) { return make_##type(l.x - r.x, l.y - r.y, l.z - r.z, l.w - r.w); } \
  __forceinline__ __device__ type operator*(const type &l, const type &r) { return make_##type(l.x * r.x, l.y * r.y, l.z * r.z, l.w * r.w); } \
  __forceinline__ __device__ type operator/(const type &l, const type &r) { return make_##type(l.x / r.x, l.y / r.y, l.z / r.z, l.w / r.w); } \
  __forceinline__ __device__ type operator%(const type &l, const type &r) { return make_##type(l.x % r.x, l.y % r.y, l.z % r.z, l.w % r.w); }
#define MAKE_VEC2_OP(type) \
  __forceinline__ __device__ type operator+(const type &l, const type &r) { return make_##type(l.x + r.x, l.y + r.y); } \
  __forceinline__ __device__ type operator-(const type &l, const type &r) { return make_##type(l.x - r.x, l.y - r.y); } \
  __forceinline__ __device__ type operator*(const type &l, const type &r) { return make_##type(l.x * r.x, l.y * r.y); } \
  __forceinline__ __device__ type operator/(const type &l, const type &r) { return make_##type(l.x / r.x, l.y / r.y); } \
  __forceinline__ __device__ type operator%(const type &l, const type &r) { return make_##type(l.x % r.x, l.y % r.y); }

MAKE_VEC4_OP(int4)
MAKE_VEC2_OP(int2)

#endif


extern "C" __global__ __launch_bounds__(28) void template_op_kernel0(float* __restrict__ input0, float* __restrict__ input1, float* __restrict__ input2, float* __restrict__ output0) {
  // [thread_extent] blockIdx.x = 3648
  // [thread_extent] threadIdx.x = 28
  float output0_local[14];
  output0_local[(0)] = 0.000000e+00f;
  output0_local[(2)] = 0.000000e+00f;
  output0_local[(4)] = 0.000000e+00f;
  output0_local[(6)] = 0.000000e+00f;
  output0_local[(8)] = 0.000000e+00f;
  output0_local[(10)] = 0.000000e+00f;
  output0_local[(12)] = 0.000000e+00f;
  output0_local[(1)] = 0.000000e+00f;
  output0_local[(3)] = 0.000000e+00f;
  output0_local[(5)] = 0.000000e+00f;
  output0_local[(7)] = 0.000000e+00f;
  output0_local[(9)] = 0.000000e+00f;
  output0_local[(11)] = 0.000000e+00f;
  output0_local[(13)] = 0.000000e+00f;
  __shared__ float mediate3_shared[392];
  // [thread_extent] threadIdx.x = 28
  mediate3_shared[(((int)threadIdx.x))] = max((input2[(((((((int)blockIdx.x) / 228) * 89376) + ((((int)blockIdx.x) % 228) * 196)) + ((int)threadIdx.x)))] + input1[((((int)blockIdx.x) % 228))]), 0.000000e+00f);
  mediate3_shared[((((int)threadIdx.x) + 28))] = max((input2[((((((((int)blockIdx.x) / 228) * 89376) + ((((int)blockIdx.x) % 228) * 196)) + ((int)threadIdx.x)) + 28))] + input1[((((int)blockIdx.x) % 228))]), 0.000000e+00f);
  mediate3_shared[((((int)threadIdx.x) + 56))] = max((input2[((((((((int)blockIdx.x) / 228) * 89376) + ((((int)blockIdx.x) % 228) * 196)) + ((int)threadIdx.x)) + 56))] + input1[((((int)blockIdx.x) % 228))]), 0.000000e+00f);
  mediate3_shared[((((int)threadIdx.x) + 84))] = max((input2[((((((((int)blockIdx.x) / 228) * 89376) + ((((int)blockIdx.x) % 228) * 196)) + ((int)threadIdx.x)) + 84))] + input1[((((int)blockIdx.x) % 228))]), 0.000000e+00f);
  mediate3_shared[((((int)threadIdx.x) + 112))] = max((input2[((((((((int)blockIdx.x) / 228) * 89376) + ((((int)blockIdx.x) % 228) * 196)) + ((int)threadIdx.x)) + 112))] + input1[((((int)blockIdx.x) % 228))]), 0.000000e+00f);
  mediate3_shared[((((int)threadIdx.x) + 140))] = max((input2[((((((((int)blockIdx.x) / 228) * 89376) + ((((int)blockIdx.x) % 228) * 196)) + ((int)threadIdx.x)) + 140))] + input1[((((int)blockIdx.x) % 228))]), 0.000000e+00f);
  mediate3_shared[((((int)threadIdx.x) + 168))] = max((input2[((((((((int)blockIdx.x) / 228) * 89376) + ((((int)blockIdx.x) % 228) * 196)) + ((int)threadIdx.x)) + 168))] + input1[((((int)blockIdx.x) % 228))]), 0.000000e+00f);
  mediate3_shared[((((int)threadIdx.x) + 196))] = max((input2[((((((((int)blockIdx.x) / 228) * 89376) + ((((int)blockIdx.x) % 228) * 196)) + ((int)threadIdx.x)) + 44688))] + input1[((((int)blockIdx.x) % 228))]), 0.000000e+00f);
  mediate3_shared[((((int)threadIdx.x) + 224))] = max((input2[(((((((((int)blockIdx.x) / 228) * 89376) + (((((int)threadIdx.x) + 224) / 196) * 44688)) + ((((int)blockIdx.x) % 228) * 196)) + (((((int)threadIdx.x) / 14) + 2) * 14)) + (((int)threadIdx.x) % 14)))] + input1[((((int)blockIdx.x) % 228))]), 0.000000e+00f);
  mediate3_shared[((((int)threadIdx.x) + 252))] = max((input2[(((((((((int)blockIdx.x) / 228) * 89376) + (((((int)threadIdx.x) + 252) / 196) * 44688)) + ((((int)blockIdx.x) % 228) * 196)) + (((((int)threadIdx.x) / 14) + 4) * 14)) + (((int)threadIdx.x) % 14)))] + input1[((((int)blockIdx.x) % 228))]), 0.000000e+00f);
  mediate3_shared[((((int)threadIdx.x) + 280))] = max((input2[(((((((((int)blockIdx.x) / 228) * 89376) + (((((int)threadIdx.x) + 280) / 196) * 44688)) + ((((int)blockIdx.x) % 228) * 196)) + (((((int)threadIdx.x) / 14) + 6) * 14)) + (((int)threadIdx.x) % 14)))] + input1[((((int)blockIdx.x) % 228))]), 0.000000e+00f);
  mediate3_shared[((((int)threadIdx.x) + 308))] = max((input2[(((((((((int)blockIdx.x) / 228) * 89376) + (((((int)threadIdx.x) + 308) / 196) * 44688)) + ((((int)blockIdx.x) % 228) * 196)) + (((((int)threadIdx.x) / 14) + 8) * 14)) + (((int)threadIdx.x) % 14)))] + input1[((((int)blockIdx.x) % 228))]), 0.000000e+00f);
  mediate3_shared[((((int)threadIdx.x) + 336))] = max((input2[(((((((((int)blockIdx.x) / 228) * 89376) + (((((int)threadIdx.x) + 336) / 196) * 44688)) + ((((int)blockIdx.x) % 228) * 196)) + (((((int)threadIdx.x) / 14) + 10) * 14)) + (((int)threadIdx.x) % 14)))] + input1[((((int)blockIdx.x) % 228))]), 0.000000e+00f);
  mediate3_shared[((((int)threadIdx.x) + 364))] = max((input2[(((((((((int)blockIdx.x) / 228) * 89376) + (((((int)threadIdx.x) + 364) / 196) * 44688)) + ((((int)blockIdx.x) % 228) * 196)) + (((((int)threadIdx.x) / 14) + 12) * 14)) + (((int)threadIdx.x) % 14)))] + input1[((((int)blockIdx.x) % 228))]), 0.000000e+00f);
  __shared__ float mediate0_shared[9];
  // [thread_extent] threadIdx.x = 28
  if (((int)threadIdx.x) < 9) {
    mediate0_shared[(((int)threadIdx.x))] = input0[((((((int)blockIdx.x) % 228) * 9) + ((int)threadIdx.x)))];
  }
  __syncthreads();
  output0_local[(0)] = (output0_local[(0)] + ((((14 <= ((int)threadIdx.x)) && (1 <= (((int)threadIdx.x) % 14))) ? mediate3_shared[((((int)threadIdx.x) - 15))] : 0.000000e+00f) * mediate0_shared[(0)]));
  output0_local[(2)] = (output0_local[(2)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 13))] : 0.000000e+00f) * mediate0_shared[(0)]));
  output0_local[(4)] = (output0_local[(4)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 41))] : 0.000000e+00f) * mediate0_shared[(0)]));
  output0_local[(6)] = (output0_local[(6)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 69))] : 0.000000e+00f) * mediate0_shared[(0)]));
  output0_local[(8)] = (output0_local[(8)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 97))] : 0.000000e+00f) * mediate0_shared[(0)]));
  output0_local[(10)] = (output0_local[(10)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 125))] : 0.000000e+00f) * mediate0_shared[(0)]));
  output0_local[(12)] = (output0_local[(12)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 153))] : 0.000000e+00f) * mediate0_shared[(0)]));
  output0_local[(0)] = (output0_local[(0)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) - 1))] : 0.000000e+00f) * mediate0_shared[(3)]));
  output0_local[(2)] = (output0_local[(2)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 27))] : 0.000000e+00f) * mediate0_shared[(3)]));
  output0_local[(4)] = (output0_local[(4)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 55))] : 0.000000e+00f) * mediate0_shared[(3)]));
  output0_local[(6)] = (output0_local[(6)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 83))] : 0.000000e+00f) * mediate0_shared[(3)]));
  output0_local[(8)] = (output0_local[(8)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 111))] : 0.000000e+00f) * mediate0_shared[(3)]));
  output0_local[(10)] = (output0_local[(10)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 139))] : 0.000000e+00f) * mediate0_shared[(3)]));
  output0_local[(12)] = (output0_local[(12)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 167))] : 0.000000e+00f) * mediate0_shared[(3)]));
  output0_local[(0)] = (output0_local[(0)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 13))] : 0.000000e+00f) * mediate0_shared[(6)]));
  output0_local[(2)] = (output0_local[(2)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 41))] : 0.000000e+00f) * mediate0_shared[(6)]));
  output0_local[(4)] = (output0_local[(4)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 69))] : 0.000000e+00f) * mediate0_shared[(6)]));
  output0_local[(6)] = (output0_local[(6)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 97))] : 0.000000e+00f) * mediate0_shared[(6)]));
  output0_local[(8)] = (output0_local[(8)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 125))] : 0.000000e+00f) * mediate0_shared[(6)]));
  output0_local[(10)] = (output0_local[(10)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 153))] : 0.000000e+00f) * mediate0_shared[(6)]));
  output0_local[(12)] = (output0_local[(12)] + ((((((int)threadIdx.x) < 14) && (1 <= (((int)threadIdx.x) % 14))) ? mediate3_shared[((((int)threadIdx.x) + 181))] : 0.000000e+00f) * mediate0_shared[(6)]));
  output0_local[(1)] = (output0_local[(1)] + ((((14 <= ((int)threadIdx.x)) && (1 <= (((int)threadIdx.x) % 14))) ? mediate3_shared[((((int)threadIdx.x) + 181))] : 0.000000e+00f) * mediate0_shared[(0)]));
  output0_local[(3)] = (output0_local[(3)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 209))] : 0.000000e+00f) * mediate0_shared[(0)]));
  output0_local[(5)] = (output0_local[(5)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 237))] : 0.000000e+00f) * mediate0_shared[(0)]));
  output0_local[(7)] = (output0_local[(7)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 265))] : 0.000000e+00f) * mediate0_shared[(0)]));
  output0_local[(9)] = (output0_local[(9)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 293))] : 0.000000e+00f) * mediate0_shared[(0)]));
  output0_local[(11)] = (output0_local[(11)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 321))] : 0.000000e+00f) * mediate0_shared[(0)]));
  output0_local[(13)] = (output0_local[(13)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 349))] : 0.000000e+00f) * mediate0_shared[(0)]));
  output0_local[(1)] = (output0_local[(1)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 195))] : 0.000000e+00f) * mediate0_shared[(3)]));
  output0_local[(3)] = (output0_local[(3)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 223))] : 0.000000e+00f) * mediate0_shared[(3)]));
  output0_local[(5)] = (output0_local[(5)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 251))] : 0.000000e+00f) * mediate0_shared[(3)]));
  output0_local[(7)] = (output0_local[(7)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 279))] : 0.000000e+00f) * mediate0_shared[(3)]));
  output0_local[(9)] = (output0_local[(9)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 307))] : 0.000000e+00f) * mediate0_shared[(3)]));
  output0_local[(11)] = (output0_local[(11)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 335))] : 0.000000e+00f) * mediate0_shared[(3)]));
  output0_local[(13)] = (output0_local[(13)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 363))] : 0.000000e+00f) * mediate0_shared[(3)]));
  output0_local[(1)] = (output0_local[(1)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 209))] : 0.000000e+00f) * mediate0_shared[(6)]));
  output0_local[(3)] = (output0_local[(3)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 237))] : 0.000000e+00f) * mediate0_shared[(6)]));
  output0_local[(5)] = (output0_local[(5)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 265))] : 0.000000e+00f) * mediate0_shared[(6)]));
  output0_local[(7)] = (output0_local[(7)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 293))] : 0.000000e+00f) * mediate0_shared[(6)]));
  output0_local[(9)] = (output0_local[(9)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 321))] : 0.000000e+00f) * mediate0_shared[(6)]));
  output0_local[(11)] = (output0_local[(11)] + (((1 <= (((int)threadIdx.x) % 14)) ? mediate3_shared[((((int)threadIdx.x) + 349))] : 0.000000e+00f) * mediate0_shared[(6)]));
  output0_local[(13)] = (output0_local[(13)] + ((((((int)threadIdx.x) < 14) && (1 <= (((int)threadIdx.x) % 14))) ? mediate3_shared[((((int)threadIdx.x) + 377))] : 0.000000e+00f) * mediate0_shared[(6)]));
  output0_local[(0)] = (output0_local[(0)] + (((14 <= ((int)threadIdx.x)) ? mediate3_shared[((((int)threadIdx.x) - 14))] : 0.000000e+00f) * mediate0_shared[(1)]));
  output0_local[(2)] = (output0_local[(2)] + (mediate3_shared[((((int)threadIdx.x) + 14))] * mediate0_shared[(1)]));
  output0_local[(4)] = (output0_local[(4)] + (mediate3_shared[((((int)threadIdx.x) + 42))] * mediate0_shared[(1)]));
  output0_local[(6)] = (output0_local[(6)] + (mediate3_shared[((((int)threadIdx.x) + 70))] * mediate0_shared[(1)]));
  output0_local[(8)] = (output0_local[(8)] + (mediate3_shared[((((int)threadIdx.x) + 98))] * mediate0_shared[(1)]));
  output0_local[(10)] = (output0_local[(10)] + (mediate3_shared[((((int)threadIdx.x) + 126))] * mediate0_shared[(1)]));
  output0_local[(12)] = (output0_local[(12)] + (mediate3_shared[((((int)threadIdx.x) + 154))] * mediate0_shared[(1)]));
  output0_local[(0)] = (output0_local[(0)] + (mediate3_shared[(((int)threadIdx.x))] * mediate0_shared[(4)]));
  output0_local[(2)] = (output0_local[(2)] + (mediate3_shared[((((int)threadIdx.x) + 28))] * mediate0_shared[(4)]));
  output0_local[(4)] = (output0_local[(4)] + (mediate3_shared[((((int)threadIdx.x) + 56))] * mediate0_shared[(4)]));
  output0_local[(6)] = (output0_local[(6)] + (mediate3_shared[((((int)threadIdx.x) + 84))] * mediate0_shared[(4)]));
  output0_local[(8)] = (output0_local[(8)] + (mediate3_shared[((((int)threadIdx.x) + 112))] * mediate0_shared[(4)]));
  output0_local[(10)] = (output0_local[(10)] + (mediate3_shared[((((int)threadIdx.x) + 140))] * mediate0_shared[(4)]));
  output0_local[(12)] = (output0_local[(12)] + (mediate3_shared[((((int)threadIdx.x) + 168))] * mediate0_shared[(4)]));
  output0_local[(0)] = (output0_local[(0)] + (mediate3_shared[((((int)threadIdx.x) + 14))] * mediate0_shared[(7)]));
  output0_local[(2)] = (output0_local[(2)] + (mediate3_shared[((((int)threadIdx.x) + 42))] * mediate0_shared[(7)]));
  output0_local[(4)] = (output0_local[(4)] + (mediate3_shared[((((int)threadIdx.x) + 70))] * mediate0_shared[(7)]));
  output0_local[(6)] = (output0_local[(6)] + (mediate3_shared[((((int)threadIdx.x) + 98))] * mediate0_shared[(7)]));
  output0_local[(8)] = (output0_local[(8)] + (mediate3_shared[((((int)threadIdx.x) + 126))] * mediate0_shared[(7)]));
  output0_local[(10)] = (output0_local[(10)] + (mediate3_shared[((((int)threadIdx.x) + 154))] * mediate0_shared[(7)]));
  output0_local[(12)] = (output0_local[(12)] + (((((int)threadIdx.x) < 14) ? mediate3_shared[((((int)threadIdx.x) + 182))] : 0.000000e+00f) * mediate0_shared[(7)]));
  output0_local[(1)] = (output0_local[(1)] + (((14 <= ((int)threadIdx.x)) ? mediate3_shared[((((int)threadIdx.x) + 182))] : 0.000000e+00f) * mediate0_shared[(1)]));
  output0_local[(3)] = (output0_local[(3)] + (mediate3_shared[((((int)threadIdx.x) + 210))] * mediate0_shared[(1)]));
  output0_local[(5)] = (output0_local[(5)] + (mediate3_shared[((((int)threadIdx.x) + 238))] * mediate0_shared[(1)]));
  output0_local[(7)] = (output0_local[(7)] + (mediate3_shared[((((int)threadIdx.x) + 266))] * mediate0_shared[(1)]));
  output0_local[(9)] = (output0_local[(9)] + (mediate3_shared[((((int)threadIdx.x) + 294))] * mediate0_shared[(1)]));
  output0_local[(11)] = (output0_local[(11)] + (mediate3_shared[((((int)threadIdx.x) + 322))] * mediate0_shared[(1)]));
  output0_local[(13)] = (output0_local[(13)] + (mediate3_shared[((((int)threadIdx.x) + 350))] * mediate0_shared[(1)]));
  output0_local[(1)] = (output0_local[(1)] + (mediate3_shared[((((int)threadIdx.x) + 196))] * mediate0_shared[(4)]));
  output0_local[(3)] = (output0_local[(3)] + (mediate3_shared[((((int)threadIdx.x) + 224))] * mediate0_shared[(4)]));
  output0_local[(5)] = (output0_local[(5)] + (mediate3_shared[((((int)threadIdx.x) + 252))] * mediate0_shared[(4)]));
  output0_local[(7)] = (output0_local[(7)] + (mediate3_shared[((((int)threadIdx.x) + 280))] * mediate0_shared[(4)]));
  output0_local[(9)] = (output0_local[(9)] + (mediate3_shared[((((int)threadIdx.x) + 308))] * mediate0_shared[(4)]));
  output0_local[(11)] = (output0_local[(11)] + (mediate3_shared[((((int)threadIdx.x) + 336))] * mediate0_shared[(4)]));
  output0_local[(13)] = (output0_local[(13)] + (mediate3_shared[((((int)threadIdx.x) + 364))] * mediate0_shared[(4)]));
  output0_local[(1)] = (output0_local[(1)] + (mediate3_shared[((((int)threadIdx.x) + 210))] * mediate0_shared[(7)]));
  output0_local[(3)] = (output0_local[(3)] + (mediate3_shared[((((int)threadIdx.x) + 238))] * mediate0_shared[(7)]));
  output0_local[(5)] = (output0_local[(5)] + (mediate3_shared[((((int)threadIdx.x) + 266))] * mediate0_shared[(7)]));
  output0_local[(7)] = (output0_local[(7)] + (mediate3_shared[((((int)threadIdx.x) + 294))] * mediate0_shared[(7)]));
  output0_local[(9)] = (output0_local[(9)] + (mediate3_shared[((((int)threadIdx.x) + 322))] * mediate0_shared[(7)]));
  output0_local[(11)] = (output0_local[(11)] + (mediate3_shared[((((int)threadIdx.x) + 350))] * mediate0_shared[(7)]));
  output0_local[(13)] = (output0_local[(13)] + (((((int)threadIdx.x) < 14) ? mediate3_shared[((((int)threadIdx.x) + 378))] : 0.000000e+00f) * mediate0_shared[(7)]));
  output0_local[(0)] = (output0_local[(0)] + ((((14 <= ((int)threadIdx.x)) && ((((int)threadIdx.x) % 14) < 13)) ? mediate3_shared[((((int)threadIdx.x) - 13))] : 0.000000e+00f) * mediate0_shared[(2)]));
  output0_local[(2)] = (output0_local[(2)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 15))] : 0.000000e+00f) * mediate0_shared[(2)]));
  output0_local[(4)] = (output0_local[(4)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 43))] : 0.000000e+00f) * mediate0_shared[(2)]));
  output0_local[(6)] = (output0_local[(6)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 71))] : 0.000000e+00f) * mediate0_shared[(2)]));
  output0_local[(8)] = (output0_local[(8)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 99))] : 0.000000e+00f) * mediate0_shared[(2)]));
  output0_local[(10)] = (output0_local[(10)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 127))] : 0.000000e+00f) * mediate0_shared[(2)]));
  output0_local[(12)] = (output0_local[(12)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 155))] : 0.000000e+00f) * mediate0_shared[(2)]));
  output0_local[(0)] = (output0_local[(0)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 1))] : 0.000000e+00f) * mediate0_shared[(5)]));
  output0_local[(2)] = (output0_local[(2)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 29))] : 0.000000e+00f) * mediate0_shared[(5)]));
  output0_local[(4)] = (output0_local[(4)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 57))] : 0.000000e+00f) * mediate0_shared[(5)]));
  output0_local[(6)] = (output0_local[(6)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 85))] : 0.000000e+00f) * mediate0_shared[(5)]));
  output0_local[(8)] = (output0_local[(8)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 113))] : 0.000000e+00f) * mediate0_shared[(5)]));
  output0_local[(10)] = (output0_local[(10)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 141))] : 0.000000e+00f) * mediate0_shared[(5)]));
  output0_local[(12)] = (output0_local[(12)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 169))] : 0.000000e+00f) * mediate0_shared[(5)]));
  output0_local[(0)] = (output0_local[(0)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 15))] : 0.000000e+00f) * mediate0_shared[(8)]));
  output0_local[(2)] = (output0_local[(2)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 43))] : 0.000000e+00f) * mediate0_shared[(8)]));
  output0_local[(4)] = (output0_local[(4)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 71))] : 0.000000e+00f) * mediate0_shared[(8)]));
  output0_local[(6)] = (output0_local[(6)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 99))] : 0.000000e+00f) * mediate0_shared[(8)]));
  output0_local[(8)] = (output0_local[(8)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 127))] : 0.000000e+00f) * mediate0_shared[(8)]));
  output0_local[(10)] = (output0_local[(10)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 155))] : 0.000000e+00f) * mediate0_shared[(8)]));
  output0_local[(12)] = (output0_local[(12)] + ((((((int)threadIdx.x) < 14) && ((((int)threadIdx.x) % 14) < 13)) ? mediate3_shared[((((int)threadIdx.x) + 183))] : 0.000000e+00f) * mediate0_shared[(8)]));
  output0_local[(1)] = (output0_local[(1)] + ((((14 <= ((int)threadIdx.x)) && ((((int)threadIdx.x) % 14) < 13)) ? mediate3_shared[((((int)threadIdx.x) + 183))] : 0.000000e+00f) * mediate0_shared[(2)]));
  output0_local[(3)] = (output0_local[(3)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 211))] : 0.000000e+00f) * mediate0_shared[(2)]));
  output0_local[(5)] = (output0_local[(5)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 239))] : 0.000000e+00f) * mediate0_shared[(2)]));
  output0_local[(7)] = (output0_local[(7)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 267))] : 0.000000e+00f) * mediate0_shared[(2)]));
  output0_local[(9)] = (output0_local[(9)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 295))] : 0.000000e+00f) * mediate0_shared[(2)]));
  output0_local[(11)] = (output0_local[(11)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 323))] : 0.000000e+00f) * mediate0_shared[(2)]));
  output0_local[(13)] = (output0_local[(13)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 351))] : 0.000000e+00f) * mediate0_shared[(2)]));
  output0_local[(1)] = (output0_local[(1)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 197))] : 0.000000e+00f) * mediate0_shared[(5)]));
  output0_local[(3)] = (output0_local[(3)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 225))] : 0.000000e+00f) * mediate0_shared[(5)]));
  output0_local[(5)] = (output0_local[(5)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 253))] : 0.000000e+00f) * mediate0_shared[(5)]));
  output0_local[(7)] = (output0_local[(7)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 281))] : 0.000000e+00f) * mediate0_shared[(5)]));
  output0_local[(9)] = (output0_local[(9)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 309))] : 0.000000e+00f) * mediate0_shared[(5)]));
  output0_local[(11)] = (output0_local[(11)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 337))] : 0.000000e+00f) * mediate0_shared[(5)]));
  output0_local[(13)] = (output0_local[(13)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 365))] : 0.000000e+00f) * mediate0_shared[(5)]));
  output0_local[(1)] = (output0_local[(1)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 211))] : 0.000000e+00f) * mediate0_shared[(8)]));
  output0_local[(3)] = (output0_local[(3)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 239))] : 0.000000e+00f) * mediate0_shared[(8)]));
  output0_local[(5)] = (output0_local[(5)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 267))] : 0.000000e+00f) * mediate0_shared[(8)]));
  output0_local[(7)] = (output0_local[(7)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 295))] : 0.000000e+00f) * mediate0_shared[(8)]));
  output0_local[(9)] = (output0_local[(9)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 323))] : 0.000000e+00f) * mediate0_shared[(8)]));
  output0_local[(11)] = (output0_local[(11)] + ((((((int)threadIdx.x) % 14) < 13) ? mediate3_shared[((((int)threadIdx.x) + 351))] : 0.000000e+00f) * mediate0_shared[(8)]));
  output0_local[(13)] = (output0_local[(13)] + ((((((int)threadIdx.x) < 14) && ((((int)threadIdx.x) % 14) < 13)) ? mediate3_shared[((((int)threadIdx.x) + 379))] : 0.000000e+00f) * mediate0_shared[(8)]));
  for (int N_inner = 0; N_inner < 2; ++N_inner) {
    output0[((((((((int)blockIdx.x) / 228) * 89376) + (N_inner * 44688)) + ((((int)blockIdx.x) % 228) * 196)) + ((int)threadIdx.x)))] = output0_local[(N_inner)];
    output0[(((((((((int)blockIdx.x) / 228) * 89376) + (N_inner * 44688)) + ((((int)blockIdx.x) % 228) * 196)) + ((int)threadIdx.x)) + 28))] = output0_local[((N_inner + 2))];
    output0[(((((((((int)blockIdx.x) / 228) * 89376) + (N_inner * 44688)) + ((((int)blockIdx.x) % 228) * 196)) + ((int)threadIdx.x)) + 56))] = output0_local[((N_inner + 4))];
    output0[(((((((((int)blockIdx.x) / 228) * 89376) + (N_inner * 44688)) + ((((int)blockIdx.x) % 228) * 196)) + ((int)threadIdx.x)) + 84))] = output0_local[((N_inner + 6))];
    output0[(((((((((int)blockIdx.x) / 228) * 89376) + (N_inner * 44688)) + ((((int)blockIdx.x) % 228) * 196)) + ((int)threadIdx.x)) + 112))] = output0_local[((N_inner + 8))];
    output0[(((((((((int)blockIdx.x) / 228) * 89376) + (N_inner * 44688)) + ((((int)blockIdx.x) % 228) * 196)) + ((int)threadIdx.x)) + 140))] = output0_local[((N_inner + 10))];
    output0[(((((((((int)blockIdx.x) / 228) * 89376) + (N_inner * 44688)) + ((((int)blockIdx.x) % 228) * 196)) + ((int)threadIdx.x)) + 168))] = output0_local[((N_inner + 12))];
  }
}

// Saved Perf = 2.287890e-05 sec / run; Step Produced = 948; Planned Steps = 1000;
// Antares Tuning Completed in 1000 steps.
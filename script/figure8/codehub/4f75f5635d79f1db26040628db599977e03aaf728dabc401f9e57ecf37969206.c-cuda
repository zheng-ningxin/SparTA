// GLOBALS: input0:float32[32, 128, 49] -> output0:float32[32, 8, 49]
// BACKEND: c-cuda (default)
// CONFIG: {"Foutput0:D0": [-1, 2, 4, 2], "Foutput0:D1": [-1, 4, 2, 1], "Foutput0:D2": [-1, 1, 1, 7], "Foutput0:O": [2, 0, 1], "Foutput0:S": 3, "Foutput0:R": 0}
// COMPUTE_V1: - einstein_v2(" output0[N0, N1, N2] = input0[N0 + 0, N1 + 96, N2 + 0] where N0 in 32 , N1 in 8 , N2 in 49; ", input_dict={ "input0" : { "dtype" : "float32", "shape" : [32, 128, 49]} })


// ---------------------------------------------------------------------------
// LOCAL: template_op_kernel0 -- input0:float32[32, 128, 49] -> output0:float32[32, 8, 49]

#include <cuda_runtime.h>
#include <cuda_fp16.h>
#include <mma.h>

#ifndef __CUDA_COMMON_MACRO__
#define __CUDA_COMMON_MACRO__

#define __ITEM_0_OF__(v) (v).x
#define __ITEM_1_OF__(v) (v).y
#define __ITEM_2_OF__(v) (v).z
#define __ITEM_3_OF__(v) (v).w

#define __STORE_ITEM_0__(t, out, ido, in, idi) *(t*)(out + ido) = *(t*)(in + idi)
#define __STORE_ITEM_1__(t, out, ido, in, idi)
#define __STORE_ITEM_2__(t, out, ido, in, idi)
#define __STORE_ITEM_3__(t, out, ido, in, idi)

#define MAKE_VEC4_OP(type) \
  __forceinline__ __device__ type operator+(const type &l, const type &r) { return make_##type(l.x + r.x, l.y + r.y, l.z + r.z, l.w + r.w); } \
  __forceinline__ __device__ type operator-(const type &l, const type &r) { return make_##type(l.x - r.x, l.y - r.y, l.z - r.z, l.w - r.w); } \
  __forceinline__ __device__ type operator*(const type &l, const type &r) { return make_##type(l.x * r.x, l.y * r.y, l.z * r.z, l.w * r.w); } \
  __forceinline__ __device__ type operator/(const type &l, const type &r) { return make_##type(l.x / r.x, l.y / r.y, l.z / r.z, l.w / r.w); } \
  __forceinline__ __device__ type operator%(const type &l, const type &r) { return make_##type(l.x % r.x, l.y % r.y, l.z % r.z, l.w % r.w); }
#define MAKE_VEC2_OP(type) \
  __forceinline__ __device__ type operator+(const type &l, const type &r) { return make_##type(l.x + r.x, l.y + r.y); } \
  __forceinline__ __device__ type operator-(const type &l, const type &r) { return make_##type(l.x - r.x, l.y - r.y); } \
  __forceinline__ __device__ type operator*(const type &l, const type &r) { return make_##type(l.x * r.x, l.y * r.y); } \
  __forceinline__ __device__ type operator/(const type &l, const type &r) { return make_##type(l.x / r.x, l.y / r.y); } \
  __forceinline__ __device__ type operator%(const type &l, const type &r) { return make_##type(l.x % r.x, l.y % r.y); }

MAKE_VEC4_OP(int4)
MAKE_VEC2_OP(int2)

__forceinline__ __device__ __half max(const __half a, const __half b) { return a > b ? a : b; }
__forceinline__ __device__ __half min(const __half a, const __half b) { return a < b ? a : b; }

#endif


extern "C" __global__ __launch_bounds__(8) void template_op_kernel0(float* __restrict__ input0, float* __restrict__ output0) {
  // [thread_extent] blockIdx.x = 2
  // [thread_extent] threadIdx.x = 4
  // [thread_extent] blockIdx.y = 1
  // [thread_extent] threadIdx.y = 2
  // [thread_extent] blockIdx.z = 7
  // [thread_extent] threadIdx.z = 1
  output0[(((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4704))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 1))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4705))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 2))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4706))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4707))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4708))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 5))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4709))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 6))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4710))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 392))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 10976))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 393))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 10977))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 394))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 10978))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 395))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 10979))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 396))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 10980))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 397))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 10981))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 398))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 10982))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3136))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 54880))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3137))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 54881))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3138))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 54882))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3139))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 54883))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3140))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 54884))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3141))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 54885))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3142))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 54886))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3528))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61152))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3529))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61153))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3530))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61154))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3531))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61155))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3532))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61156))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3533))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61157))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3534))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61158))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 98))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4802))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 99))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4803))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 100))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4804))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 101))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4805))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 102))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4806))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 103))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4807))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 104))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4808))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 490))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 11074))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 491))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 11075))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 492))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 11076))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 493))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 11077))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 494))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 11078))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 495))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 11079))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 496))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 11080))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3234))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 54978))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3235))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 54979))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3236))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 54980))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3237))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 54981))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3238))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 54982))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3239))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 54983))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3240))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 54984))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3626))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61250))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3627))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61251))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3628))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61252))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3629))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61253))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3630))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61254))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3631))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61255))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3632))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61256))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 196))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4900))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 197))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4901))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 198))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4902))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 199))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4903))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 200))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4904))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 201))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4905))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 202))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4906))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 588))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 11172))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 589))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 11173))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 590))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 11174))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 591))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 11175))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 592))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 11176))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 593))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 11177))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 594))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 11178))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3332))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 55076))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3333))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 55077))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3334))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 55078))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3335))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 55079))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3336))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 55080))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3337))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 55081))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3338))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 55082))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3724))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61348))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3725))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61349))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3726))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61350))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3727))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61351))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3728))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61352))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3729))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61353))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3730))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61354))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 294))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4998))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 295))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 4999))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 296))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 5000))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 297))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 5001))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 298))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 5002))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 299))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 5003))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 300))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 5004))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 686))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 11270))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 687))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 11271))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 688))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 11272))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 689))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 11273))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 690))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 11274))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 691))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 11275))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 692))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 11276))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3430))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 55174))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3431))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 55175))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3432))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 55176))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3433))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 55177))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3434))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 55178))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3435))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 55179))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3436))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 55180))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3822))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61446))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3823))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61447))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3824))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61448))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3825))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61449))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3826))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61450))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3827))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61451))];
  output0[((((((((int)blockIdx.x) * 6272) + (((int)threadIdx.x) * 784)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 3828))] = input0[((((((((int)blockIdx.x) * 100352) + (((int)threadIdx.x) * 12544)) + (((int)threadIdx.y) * 49)) + (((int)blockIdx.z) * 7)) + 61452))];
}

// Saved Perf = 3.228020e-06 sec / run; Step Produced = 472; Planned Steps = 1000;
// Antares Tuning Completed in 1000 steps.